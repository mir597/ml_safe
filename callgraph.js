J$.__list = {};
J$.analysis = {
  invokeFunPre : function (iid, f, base, args, isConstructor) {

      var add = function(c, d) {
        var n = J$.__list[c];
        if (n === undefined) {
            // make new
            n = [d];
        } else {
            // append new
            if (n.indexOf (d)  === -1) {
              // absent
              n[n.length] = d;
              //console.log ("absent " + n);
            } else {
              // present
              // console.log ("present " + n);
            }
        }
        J$.__list[c] = n;
      };
    
      if (f.__name__ === undefined) {
          if (f["*$NAMEOFFUN$*"] !== undefined) {
              // library calls
              var callsite_iid = J$.getGlobalIID(iid);
              var callsite_loc = J$.iidToLocation(callsite_iid);
              var callsite_arr = callsite_loc.split (":");
              var callsite_filename = callsite_arr[0].replace(/^.*[\\\/]/, '');
              var cs_lb = callsite_arr[1];
              var cs_cb = callsite_arr[2];
              var cs_le = callsite_arr[3];
              var cs_ce = callsite_arr[4].split(")")[0];
              var cs_pos = callsite_filename + "@" + cs_lb + ":" + cs_cb + "-" + cs_le + ":" + cs_ce;

              var fun_pos = f["*$NAMEOFFUN$*"]; // TODO : replace . by _
              var a = fun_pos.split ("");
              for (i=0;i<a.length;i++)
                if (a[i] === '.') 
                  a[i] = '_';
              fun_pos = a.join("");
              add (cs_pos, fun_pos);
          } else {
              console.log(base);
              console.log(f);
          }

      } else {
          var fun_iid = f["*J$IID*"];
          var fun_sid = f["*J$SID*"];
        // application calls
        var callsite_iid = J$.getGlobalIID(iid);
        var callsite_loc = J$.iidToLocation(callsite_iid);
        var fun_loc = J$.iidToLocation(fun_sid, fun_iid);

        var callsite_arr = callsite_loc.split (":");
        var callsite_filename = callsite_arr[0].replace(/^.*[\\\/]/, '');
        var cs_lb = callsite_arr[1];
        var cs_cb = callsite_arr[2];
        var cs_le = callsite_arr[3];
        var cs_ce = callsite_arr[4].split(")")[0];
        var cs_pos = callsite_filename + "@" + cs_lb + ":" + cs_cb + "-" + cs_le + ":" + cs_ce;

        var fun_arr = fun_loc.split (":");
        var fun_filename = fun_arr[0].replace(/^.*[\\\/]/, '');
        var fun_lb = fun_arr[1];
        var fun_cb = fun_arr[2];
        var fun_le = fun_arr[3];
        var fun_ce = fun_arr[4].split(")")[0];
        var fun_pos = fun_filename + "@" + fun_lb + ":" + fun_cb + "-" + fun_le + ":" + fun_ce;
 
        // console.log (fun_loc);
        if (fun_cb === undefined) {
//        var fun_loc = J$.iidToLocation(fun_iid);
            console.log (fun_iid);
            console.log (f);
        } else {

        }

       
        // console.log (callsite_filename + cs_pos + " => " + fun_filename + fun_pos);
        add(cs_pos, fun_pos);
      }
    },

  literal : function (iid, val, hasGetterSetter) {
    if (Object.prototype.toString.call(val) === "[object Function]") {
      val.__name__ = iid;
      val.__native__ = false;
    }
  },
  
  endExecution : function () {
    var json = JSON.stringify (J$.__list);
    console.log (json);
  }
};

function native(obj, name) {
  if (obj === undefined)
    console.log (name);
  else {
    obj["*$NAMEOFFUN$*"] = name;
}
}
init_native_name();

function init_native_name(){
  native(this.escape,'escape');
  native(this.unescape,'unescape');
  native(Map,'Map');
  native(SyntaxError,'SyntaxError');
  native(Int16Array,'Int16Array');
  native(Promise,'Promise');
  native(Date,'Date');
  native(Number,'Number');
  native(eval,'eval');
  native(encodeURI,'encodeURI');
  native(Uint8Array,'Uint8Array');
  native(Boolean,'Boolean');
  native(Error,'Error');
  native(Uint16Array,'Uint16Array');
  native(Int8Array,'Int8Array');
  native(RangeError,'RangeError');
  native(WeakMap,'WeakMap');
  native(Symbol,'Symbol');
  native(Float64Array,'Float64Array');
  native(URIError,'URIError');
  native(Uint8ClampedArray,'Uint8ClampedArray');
  native(Uint32Array,'Uint32Array');
  native(Int32Array,'Int32Array');
  native(isFinite,'isFinite');
  native(TypeError,'TypeError');
  native(isNaN,'isNaN');
  native(ArrayBuffer,'ArrayBuffer');
  native(decodeURIComponent,'decodeURIComponent');
  native(decodeURI,'decodeURI');
  native(DataView,'DataView');
  native(parseFloat,'parseFloat');
  native(parseInt,'parseInt');
  native(escape,'escape');
  native(String,'String');
  native(Function,'Function');
  native(Object,'Object');
  native(EvalError,'EvalError');
  native(Set,'Set');
  native(Float32Array,'Float32Array');
  native(WeakSet,'WeakSet');
  native(Array,'Array');
  native(RegExp,'RegExp');
  native(ReferenceError,'ReferenceError');
  native(encodeURIComponent,'encodeURIComponent');
  native(webkitOfflineAudioContext,'webkitOfflineAudioContext');
  native(webkitAudioContext,'webkitAudioContext');
  native(webkitSpeechRecognitionEvent,'webkitSpeechRecognitionEvent');
  native(webkitSpeechRecognitionError,'webkitSpeechRecognitionError');
  native(webkitSpeechRecognition,'webkitSpeechRecognition');
  native(webkitSpeechGrammarList,'webkitSpeechGrammarList');
  native(webkitSpeechGrammar,'webkitSpeechGrammar');
  native(webkitRTCPeerConnection,'webkitRTCPeerConnection');
  native(ServiceWorkerRegistration,'ServiceWorkerRegistration');
  native(ServiceWorkerContainer,'ServiceWorkerContainer');
  native(ServiceWorker,'ServiceWorker');
  native(ScreenOrientation,'ScreenOrientation');
  native(Notification,'Notification');
  native(MediaSource,'MediaSource');
  native(BatteryManager,'BatteryManager');
  native(webkitMediaStream,'webkitMediaStream');
  native(webkitIDBTransaction,'webkitIDBTransaction');
  native(webkitIDBRequest,'webkitIDBRequest');
  native(webkitIDBObjectStore,'webkitIDBObjectStore');
  native(webkitIDBKeyRange,'webkitIDBKeyRange');
  native(webkitIDBIndex,'webkitIDBIndex');
  native(webkitIDBFactory,'webkitIDBFactory');
  native(webkitIDBDatabase,'webkitIDBDatabase');
  native(webkitIDBCursor,'webkitIDBCursor');
  native(WebSocket,'WebSocket');
  native(TextEncoder,'TextEncoder');
  native(TextDecoder,'TextDecoder');
  native(SpeechSynthesisUtterance,'SpeechSynthesisUtterance');
  native(SpeechSynthesisEvent,'SpeechSynthesisEvent');
  native(RTCSessionDescription,'RTCSessionDescription');
  native(RTCIceCandidate,'RTCIceCandidate');
  native(MediaStreamTrack,'MediaStreamTrack');
  native(MediaStreamEvent,'MediaStreamEvent');
  native(IDBVersionChangeEvent,'IDBVersionChangeEvent');
  native(IDBOpenDBRequest,'IDBOpenDBRequest');
  native(IDBCursorWithValue,'IDBCursorWithValue');
  native(GamepadEvent,'GamepadEvent');
  native(Gamepad,'Gamepad');
  native(DeviceOrientationEvent,'DeviceOrientationEvent');
  native(DeviceMotionEvent,'DeviceMotionEvent');
  native(CryptoKey,'CryptoKey');
  native(CloseEvent,'CloseEvent');
  native(WaveShaperNode,'WaveShaperNode');
  native(ScriptProcessorNode,'ScriptProcessorNode');
  native(PeriodicWave,'PeriodicWave');
  native(OscillatorNode,'OscillatorNode');
  native(OfflineAudioCompletionEvent,'OfflineAudioCompletionEvent');
  native(MediaStreamAudioSourceNode,'MediaStreamAudioSourceNode');
  native(MediaStreamAudioDestinationNode,'MediaStreamAudioDestinationNode');
  native(MediaElementAudioSourceNode,'MediaElementAudioSourceNode');
  native(GainNode,'GainNode');
  native(DynamicsCompressorNode,'DynamicsCompressorNode');
  native(DelayNode,'DelayNode');
  native(ConvolverNode,'ConvolverNode');
  native(ChannelSplitterNode,'ChannelSplitterNode');
  native(ChannelMergerNode,'ChannelMergerNode');
  native(BiquadFilterNode,'BiquadFilterNode');
  native(AudioProcessingEvent,'AudioProcessingEvent');
  native(AudioParam,'AudioParam');
  native(AudioNode,'AudioNode');
  native(AudioListener,'AudioListener');
  native(AudioDestinationNode,'AudioDestinationNode');
  native(AudioBufferSourceNode,'AudioBufferSourceNode');
  native(AudioBuffer,'AudioBuffer');
  native(AnalyserNode,'AnalyserNode');
  native(XSLTProcessor,'XSLTProcessor');
  native(SharedWorker,'SharedWorker');
  native(SVGTransformList,'SVGTransformList');
  native(SVGTransform,'SVGTransform');
  native(SVGStringList,'SVGStringList');
  native(SVGRenderingIntent,'SVGRenderingIntent');
  native(SVGPreserveAspectRatio,'SVGPreserveAspectRatio');
  native(SVGPointList,'SVGPointList');
  native(SVGPathSegMovetoRel,'SVGPathSegMovetoRel');
  native(SVGPathSegMovetoAbs,'SVGPathSegMovetoAbs');
  native(SVGPathSegList,'SVGPathSegList');
  native(SVGPathSegLinetoVerticalRel,'SVGPathSegLinetoVerticalRel');
  native(SVGPathSegLinetoVerticalAbs,'SVGPathSegLinetoVerticalAbs');
  native(SVGPathSegLinetoRel,'SVGPathSegLinetoRel');
  native(SVGPathSegLinetoHorizontalRel,'SVGPathSegLinetoHorizontalRel');
  native(SVGPathSegLinetoHorizontalAbs,'SVGPathSegLinetoHorizontalAbs');
  native(SVGPathSegLinetoAbs,'SVGPathSegLinetoAbs');
  native(SVGPathSegCurvetoQuadraticSmoothRel,'SVGPathSegCurvetoQuadraticSmoothRel');
  native(SVGPathSegCurvetoQuadraticSmoothAbs,'SVGPathSegCurvetoQuadraticSmoothAbs');
  native(SVGPathSegCurvetoQuadraticRel,'SVGPathSegCurvetoQuadraticRel');
  native(SVGPathSegCurvetoQuadraticAbs,'SVGPathSegCurvetoQuadraticAbs');
  native(SVGPathSegCurvetoCubicSmoothRel,'SVGPathSegCurvetoCubicSmoothRel');
  native(SVGPathSegCurvetoCubicSmoothAbs,'SVGPathSegCurvetoCubicSmoothAbs');
  native(SVGPathSegCurvetoCubicRel,'SVGPathSegCurvetoCubicRel');
  native(SVGPathSegCurvetoCubicAbs,'SVGPathSegCurvetoCubicAbs');
  native(SVGPathSeg,'SVGPathSeg');
  native(SVGPathSegClosePath,'SVGPathSegClosePath');
  native(SVGPathSegArcRel,'SVGPathSegArcRel');
  native(SVGPathSegArcAbs,'SVGPathSegArcAbs');
  native(SVGNumberList,'SVGNumberList');
  native(SVGLengthList,'SVGLengthList');
  native(SVGLength,'SVGLength');
  native(SVGAnimatedTransformList,'SVGAnimatedTransformList');
  native(SVGAnimatedString,'SVGAnimatedString');
  native(SVGAnimatedRect,'SVGAnimatedRect');
  native(SVGAnimatedPreserveAspectRatio,'SVGAnimatedPreserveAspectRatio');
  native(SVGAnimatedNumberList,'SVGAnimatedNumberList');
  native(SVGAnimatedNumber,'SVGAnimatedNumber');
  native(SVGAnimatedLengthList,'SVGAnimatedLengthList');
  native(SVGAnimatedLength,'SVGAnimatedLength');
  native(SVGAnimatedInteger,'SVGAnimatedInteger');
  native(SVGAnimatedEnumeration,'SVGAnimatedEnumeration');
  native(SVGAnimatedBoolean,'SVGAnimatedBoolean');
  native(SVGAnimatedAngle,'SVGAnimatedAngle');
  native(MediaKeyEvent,'MediaKeyEvent');
  native(MediaKeyError,'MediaKeyError');
  native(HTMLPictureElement,'HTMLPictureElement');
  native(TimeRanges,'TimeRanges');
  native(MediaError,'MediaError');
  native(HTMLVideoElement,'HTMLVideoElement');
  native(HTMLSourceElement,'HTMLSourceElement');
  native(HTMLMediaElement,'HTMLMediaElement');
  native(Audio,'Audio');
  native(HTMLAudioElement,'HTMLAudioElement');
  native(XPathResult,'XPathResult');
  native(XPathExpression,'XPathExpression');
  native(XPathEvaluator,'XPathEvaluator');
  native(XMLSerializer,'XMLSerializer');
  native(XMLHttpRequestUpload,'XMLHttpRequestUpload');
  native(XMLHttpRequestProgressEvent,'XMLHttpRequestProgressEvent');
  native(XMLHttpRequest,'XMLHttpRequest');
  native(XMLDocument,'XMLDocument');
  native(Worker,'Worker');
  native(Window,'Window');
  native(window.DataTransferItem,'window.DataTransferItem');
  native(window.DataTransferItem.prototype.getAsFile,'window.DataTransferItem.prototype.getAsFile');
  native(window.DataTransferItem.prototype.getAsString,'window.DataTransferItem.prototype.getAsString');
  native(window.DataTransferItem.prototype.webkitGetAsEntry,'window.DataTransferItem.prototype.webkitGetAsEntry');
  native(window.__proto__.fetch,'window.@proto.fetch');
  //native(window.history.__proto__.state,'window.history.@proto.state');
  native(WheelEvent,'WheelEvent');
  native(WebKitCSSMatrix,'WebKitCSSMatrix');
  //native(WebKitCSSFilterRule,'WebKitCSSFilterRule');
  native(WebKitAnimationEvent,'WebKitAnimationEvent');
  native(WebGLUniformLocation,'WebGLUniformLocation');
  native(WebGLTexture,'WebGLTexture');
  native(WebGLShaderPrecisionFormat,'WebGLShaderPrecisionFormat');
  native(WebGLShader,'WebGLShader');
  native(WebGLRenderingContext,'WebGLRenderingContext');
  native(WebGLRenderbuffer,'WebGLRenderbuffer');
  native(WebGLProgram,'WebGLProgram');
  native(WebGLFramebuffer,'WebGLFramebuffer');
  native(WebGLContextEvent,'WebGLContextEvent');
  native(WebGLBuffer,'WebGLBuffer');
  native(WebGLActiveInfo,'WebGLActiveInfo');
  native(ValidityState,'ValidityState');
  native(VTTCue,'VTTCue');
  native(URL,'URL');
  native(UIEvent,'UIEvent');
  native(TreeWalker,'TreeWalker');
  native(TransitionEvent,'TransitionEvent');
  native(TrackEvent,'TrackEvent');
  native(TouchList,'TouchList');
  native(TouchEvent,'TouchEvent');
  native(Touch,'Touch');
  native(TextTrackList,'TextTrackList');
  native(TextTrackCueList,'TextTrackCueList');
  native(TextTrackCue,'TextTrackCue');
  native(TextTrack,'TextTrack');
  native(TextMetrics,'TextMetrics');
  native(TextEvent,'TextEvent');
  native(Text,'Text');
  native(StyleSheetList,'StyleSheetList');
  native(StyleSheet,'StyleSheet');
  native(StorageEvent,'StorageEvent');
  native(Storage,'Storage');
  native(ShadowRoot,'ShadowRoot');
  native(Selection,'Selection');
  native(SecurityPolicyViolationEvent,'SecurityPolicyViolationEvent');
  native(Screen,'Screen');
  native(SVGZoomEvent,'SVGZoomEvent');
  native(SVGViewSpec,'SVGViewSpec');
  native(SVGViewElement,'SVGViewElement');
  native(SVGUseElement,'SVGUseElement');
  native(SVGUnitTypes,'SVGUnitTypes');
  native(SVGTitleElement,'SVGTitleElement');
  native(SVGTextPositioningElement,'SVGTextPositioningElement');
  native(SVGTextPathElement,'SVGTextPathElement');
  native(SVGTextElement,'SVGTextElement');
  native(SVGTextContentElement,'SVGTextContentElement');
  native(SVGTSpanElement,'SVGTSpanElement');
  native(SVGSymbolElement,'SVGSymbolElement');
  native(SVGSwitchElement,'SVGSwitchElement');
  native(SVGStyleElement,'SVGStyleElement');
  native(SVGStopElement,'SVGStopElement');
  native(SVGSetElement,'SVGSetElement');
  native(SVGScriptElement,'SVGScriptElement');
  native(SVGSVGElement,'SVGSVGElement');
  native(SVGRectElement,'SVGRectElement');
  native(SVGRect,'SVGRect');
  native(SVGRadialGradientElement,'SVGRadialGradientElement');
  native(SVGPolylineElement,'SVGPolylineElement');
  native(SVGPolygonElement,'SVGPolygonElement');
  native(SVGPoint,'SVGPoint');
  native(SVGPatternElement,'SVGPatternElement');
  native(SVGPathElement,'SVGPathElement');
  native(SVGNumber,'SVGNumber');
  native(SVGMetadataElement,'SVGMetadataElement');
  native(SVGMatrix,'SVGMatrix');
  native(SVGMaskElement,'SVGMaskElement');
  native(SVGMarkerElement,'SVGMarkerElement');
  native(SVGMPathElement,'SVGMPathElement');
  native(SVGLinearGradientElement,'SVGLinearGradientElement');
  native(SVGLineElement,'SVGLineElement');
  native(SVGImageElement,'SVGImageElement');
  native(SVGGraphicsElement,'SVGGraphicsElement');
  native(SVGGradientElement,'SVGGradientElement');
  native(SVGGeometryElement,'SVGGeometryElement');
  native(SVGGElement,'SVGGElement');
  native(SVGForeignObjectElement,'SVGForeignObjectElement');
  native(SVGFilterElement,'SVGFilterElement');
  native(SVGFETurbulenceElement,'SVGFETurbulenceElement');
  native(SVGFETileElement,'SVGFETileElement');
  native(SVGFESpotLightElement,'SVGFESpotLightElement');
  native(SVGFESpecularLightingElement,'SVGFESpecularLightingElement');
  native(SVGFEPointLightElement,'SVGFEPointLightElement');
  native(SVGFEOffsetElement,'SVGFEOffsetElement');
  native(SVGFEMorphologyElement,'SVGFEMorphologyElement');
  native(SVGFEMergeNodeElement,'SVGFEMergeNodeElement');
  native(SVGFEMergeElement,'SVGFEMergeElement');
  native(SVGFEImageElement,'SVGFEImageElement');
  native(SVGFEGaussianBlurElement,'SVGFEGaussianBlurElement');
  native(SVGFEFuncRElement,'SVGFEFuncRElement');
  native(SVGFEFuncGElement,'SVGFEFuncGElement');
  native(SVGFEFuncBElement,'SVGFEFuncBElement');
  native(SVGFEFuncAElement,'SVGFEFuncAElement');
  native(SVGFEFloodElement,'SVGFEFloodElement');
  native(SVGFEDropShadowElement,'SVGFEDropShadowElement');
  native(SVGFEDistantLightElement,'SVGFEDistantLightElement');
  native(SVGFEDisplacementMapElement,'SVGFEDisplacementMapElement');
  native(SVGFEDiffuseLightingElement,'SVGFEDiffuseLightingElement');
  native(SVGFEConvolveMatrixElement,'SVGFEConvolveMatrixElement');
  native(SVGFECompositeElement,'SVGFECompositeElement');
  native(SVGFEComponentTransferElement,'SVGFEComponentTransferElement');
  native(SVGFEColorMatrixElement,'SVGFEColorMatrixElement');
  native(SVGFEBlendElement,'SVGFEBlendElement');
  native(SVGEllipseElement,'SVGEllipseElement');
  native(SVGElement,'SVGElement');
  native(SVGDiscardElement,'SVGDiscardElement');
  native(SVGDescElement,'SVGDescElement');
  native(SVGDefsElement,'SVGDefsElement');
  native(SVGCursorElement,'SVGCursorElement');
  native(SVGComponentTransferFunctionElement,'SVGComponentTransferFunctionElement');
  native(SVGClipPathElement,'SVGClipPathElement');
  native(SVGCircleElement,'SVGCircleElement');
  native(SVGAnimationElement,'SVGAnimationElement');
  native(SVGAnimateTransformElement,'SVGAnimateTransformElement');
  native(SVGAnimateMotionElement,'SVGAnimateMotionElement');
  native(SVGAnimateElement,'SVGAnimateElement');
  native(SVGAngle,'SVGAngle');
  native(SVGAElement,'SVGAElement');
  native(Range,'Range');
  native(RadioNodeList,'RadioNodeList');
  native(ProgressEvent,'ProgressEvent');
  native(ProcessingInstruction,'ProcessingInstruction');
  native(PopStateEvent,'PopStateEvent');
  native(Plugin,'Plugin');
  native(PluginArray,'PluginArray');
  native(PerformanceTiming,'PerformanceTiming');
  native(PerformanceResourceTiming,'PerformanceResourceTiming');
  native(PerformanceNavigation,'PerformanceNavigation');
  native(PerformanceMeasure,'PerformanceMeasure');
  native(PerformanceMark,'PerformanceMark');
  native(PerformanceEntry,'PerformanceEntry');
  native(Performance,'Performance');
  native(Path2D,'Path2D');
  native(PageTransitionEvent,'PageTransitionEvent');
  //native(OverflowEvent,'OverflowEvent');
  native(NodeList,'NodeList');
  native(NodeIterator,'NodeIterator');
  native(NodeFilter,'NodeFilter');
  native(Node,'Node');
  native(Navigator,'Navigator');
  native(NamedNodeMap,'NamedNodeMap');
  native(MutationRecord,'MutationRecord');
  native(MutationObserver,'MutationObserver');
  native(MutationEvent,'MutationEvent');
  native(MouseEvent,'MouseEvent');
  native(MimeType,'MimeType');
  native(MimeTypeArray,'MimeTypeArray');
  native(MessagePort,'MessagePort');
  native(MessageEvent,'MessageEvent');
  native(MessageChannel,'MessageChannel');
  native(MediaQueryListEvent,'MediaQueryListEvent');
  native(MediaQueryList,'MediaQueryList');
  native(MediaList,'MediaList');
  native(Location,'Location');
  native(KeyboardEvent,'KeyboardEvent');
  native(InputMethodContext,'InputMethodContext');
  native(ImageData,'ImageData');
  native(ImageBitmap,'ImageBitmap');
  native(History,'History');
  native(HashChangeEvent,'HashChangeEvent');
  native(HTMLUnknownElement,'HTMLUnknownElement');
  native(HTMLUListElement,'HTMLUListElement');
  native(HTMLTrackElement,'HTMLTrackElement');
  native(HTMLTitleElement,'HTMLTitleElement');
  native(HTMLTextAreaElement,'HTMLTextAreaElement');
  native(HTMLTemplateElement,'HTMLTemplateElement');
  native(HTMLTableSectionElement,'HTMLTableSectionElement');
  native(HTMLTableRowElement,'HTMLTableRowElement');
  native(HTMLTableElement,'HTMLTableElement');
  native(HTMLTableColElement,'HTMLTableColElement');
  native(HTMLTableCellElement,'HTMLTableCellElement');
  native(HTMLTableCaptionElement,'HTMLTableCaptionElement');
  native(HTMLStyleElement,'HTMLStyleElement');
  native(HTMLSpanElement,'HTMLSpanElement');
  native(HTMLShadowElement,'HTMLShadowElement');
  native(HTMLSelectElement,'HTMLSelectElement');
  native(HTMLScriptElement,'HTMLScriptElement');
  native(HTMLQuoteElement,'HTMLQuoteElement');
  native(HTMLProgressElement,'HTMLProgressElement');
  native(HTMLPreElement,'HTMLPreElement');
  native(HTMLParamElement,'HTMLParamElement');
  native(HTMLParagraphElement,'HTMLParagraphElement');
  native(HTMLOutputElement,'HTMLOutputElement');
  native(HTMLOptionsCollection,'HTMLOptionsCollection');
  native(Option,'Option');
  native(HTMLOptionElement,'HTMLOptionElement');
  native(HTMLOptGroupElement,'HTMLOptGroupElement');
  native(HTMLObjectElement,'HTMLObjectElement');
  native(HTMLOListElement,'HTMLOListElement');
  native(HTMLModElement,'HTMLModElement');
  native(HTMLMeterElement,'HTMLMeterElement');
  native(HTMLMetaElement,'HTMLMetaElement');
  native(HTMLMenuElement,'HTMLMenuElement');
  native(HTMLMarqueeElement,'HTMLMarqueeElement');
  native(HTMLMapElement,'HTMLMapElement');
  native(HTMLLinkElement,'HTMLLinkElement');
  native(HTMLLegendElement,'HTMLLegendElement');
  native(HTMLLabelElement,'HTMLLabelElement');
  native(HTMLLIElement,'HTMLLIElement');
  native(HTMLKeygenElement,'HTMLKeygenElement');
  native(HTMLInputElement,'HTMLInputElement');
  native(Image,'Image');
  native(HTMLImageElement,'HTMLImageElement');
  native(HTMLIFrameElement,'HTMLIFrameElement');
  native(HTMLHtmlElement,'HTMLHtmlElement');
  native(HTMLHeadingElement,'HTMLHeadingElement');
  native(HTMLHeadElement,'HTMLHeadElement');
  native(HTMLHRElement,'HTMLHRElement');
  native(HTMLFrameSetElement,'HTMLFrameSetElement');
  native(HTMLFrameElement,'HTMLFrameElement');
  native(HTMLFormElement,'HTMLFormElement');
  native(HTMLFormControlsCollection,'HTMLFormControlsCollection');
  native(HTMLFontElement,'HTMLFontElement');
  native(HTMLFieldSetElement,'HTMLFieldSetElement');
  native(HTMLEmbedElement,'HTMLEmbedElement');
  native(HTMLElement,'HTMLElement');
  native(HTMLDocument,'HTMLDocument');
  native(HTMLDivElement,'HTMLDivElement');
  native(HTMLDirectoryElement,'HTMLDirectoryElement');
  native(HTMLDialogElement,'HTMLDialogElement');
  native(HTMLDetailsElement,'HTMLDetailsElement');
  native(HTMLDataListElement,'HTMLDataListElement');
  native(HTMLDListElement,'HTMLDListElement');
  native(HTMLContentElement,'HTMLContentElement');
  native(HTMLCollection,'HTMLCollection');
  native(HTMLCanvasElement,'HTMLCanvasElement');
  native(HTMLButtonElement,'HTMLButtonElement');
  native(HTMLBodyElement,'HTMLBodyElement');
  native(HTMLBaseElement,'HTMLBaseElement');
  native(HTMLBRElement,'HTMLBRElement');
  native(HTMLAreaElement,'HTMLAreaElement');
  native(HTMLAppletElement,'HTMLAppletElement');
  native(HTMLAnchorElement,'HTMLAnchorElement');
  native(HTMLAllCollection,'HTMLAllCollection');
  native(FormData,'FormData');
  native(FontFace,'FontFace');
  native(FocusEvent,'FocusEvent');
  native(FileReader,'FileReader');
  native(FileList,'FileList');
  native(FileError,'FileError');
  native(File,'File');
  native(EventTarget,'EventTarget');
  native(EventSource,'EventSource');
  native(Event,'Event');
  native(ErrorEvent,'ErrorEvent');
  native(Element,'Element');
  native(DocumentType,'DocumentType');
  native(DocumentFragment,'DocumentFragment');
  native(Document,'Document');
  native(DataTransferItemList,'DataTransferItemList');
  native(DataTransfer,'DataTransfer');
  native(DOMTokenList,'DOMTokenList');
  native(DOMStringMap,'DOMStringMap');
  native(DOMStringList,'DOMStringList');
  native(DOMSettableTokenList,'DOMSettableTokenList');
  native(DOMParser,'DOMParser');
  native(DOMImplementation,'DOMImplementation');
  native(DOMException,'DOMException');
  native(DOMError,'DOMError');
  native(CustomEvent,'CustomEvent');
  native(CompositionEvent,'CompositionEvent');
  native(Comment,'Comment');
  native(ClipboardEvent,'ClipboardEvent');
  native(ClientRectList,'ClientRectList');
  native(ClientRect,'ClientRect');
  native(CharacterData,'CharacterData');
  native(CanvasRenderingContext2D,'CanvasRenderingContext2D');
  native(CanvasPattern,'CanvasPattern');
  native(CanvasGradient,'CanvasGradient');
  native(CSSViewportRule,'CSSViewportRule');
  native(CSSUnknownRule,'CSSUnknownRule');
  native(CSSSupportsRule,'CSSSupportsRule');
  native(CSSStyleSheet,'CSSStyleSheet');
  native(CSSStyleRule,'CSSStyleRule');
  native(CSSStyleDeclaration,'CSSStyleDeclaration');
  native(CSSRuleList,'CSSRuleList');
  native(CSSRule,'CSSRule');
  native(CSSPageRule,'CSSPageRule');
  native(CSSMediaRule,'CSSMediaRule');
  native(CSSKeyframesRule,'CSSKeyframesRule');
  native(CSSKeyframeRule,'CSSKeyframeRule');
  native(CSSImportRule,'CSSImportRule');
  native(CSSFontFaceRule,'CSSFontFaceRule');
  native(CDATASection,'CDATASection');
  native(Blob,'Blob');
  native(BeforeUnloadEvent,'BeforeUnloadEvent');
  native(BarProp,'BarProp');
  native(AutocompleteErrorEvent,'AutocompleteErrorEvent');
  native(Attr,'Attr');
  native(ApplicationCacheErrorEvent,'ApplicationCacheErrorEvent');
  native(ApplicationCache,'ApplicationCache');
  native(Object.prototype.toString,'Object.prototype.toString');
  native(Object.prototype.toLocaleString,'Object.prototype.toLocaleString');
  native(Object.prototype.valueOf,'Object.prototype.valueOf');
  native(Object.prototype.hasOwnProperty,'Object.prototype.hasOwnProperty');
  native(Object.prototype.isPrototypeOf,'Object.prototype.isPrototypeOf');
  native(Object.prototype.propertyIsEnumerable,'Object.prototype.propertyIsEnumerable');
  native(Object.prototype.__defineGetter__,'Object.prototype.__defineGetter__');
  native(Object.prototype.__lookupGetter__,'Object.prototype.__lookupGetter__');
  native(Object.prototype.__defineSetter__,'Object.prototype.__defineSetter__');
  native(Object.prototype.__lookupSetter__,'Object.prototype.__lookupSetter__');
  native(ApplicationCache.toString,'ApplicationCache.toString');
  native(URL.revokeObjectURL,'URL.revokeObjectURL');
  native(URL.createObjectURL,'URL.createObjectURL');
  native(MediaStreamTrack.getSources,'MediaStreamTrack.getSources');
  native(webkitIDBKeyRange.only,'webkitIDBKeyRange.only');
  native(webkitIDBKeyRange.lowerBound,'webkitIDBKeyRange.lowerBound');
  native(webkitIDBKeyRange.upperBound,'webkitIDBKeyRange.upperBound');
  native(webkitIDBKeyRange.bound,'webkitIDBKeyRange.bound');
  native(MediaSource.isTypeSupported,'MediaSource.isTypeSupported');
  native(Notification.requestPermission,'Notification.requestPermission');
  native(location.replace,'location.replace');
  native(location.assign,'location.assign');
  native(location.reload,'location.reload');
  native(location.toString,'location.toString');
  native(location.valueOf,'location.valueOf');
  native(JSON.parse,'JSON.parse');
  native(JSON.stringify,'JSON.stringify');
  native(Array.isArray,'Array.isArray');
  native(Array.observe,'Array.observe');
  native(Array.unobserve,'Array.unobserve');
  native(Intl.Collator,'Intl.Collator');
  native(Intl.NumberFormat,'Intl.NumberFormat');
  native(Intl.DateTimeFormat,'Intl.DateTimeFormat');
  native(Intl.v8BreakIterator,'Intl.v8BreakIterator');
  native(Date.now,'Date.now');
  native(Object.keys,'Object.keys');
  native(Object.create,'Object.create');
  native(Object.defineProperty,'Object.defineProperty');
  native(Object.defineProperties,'Object.defineProperties');
  native(Object.freeze,'Object.freeze');
  native(Object.getPrototypeOf,'Object.getPrototypeOf');
  native(Object.setPrototypeOf,'Object.setPrototypeOf');
  native(Object.getOwnPropertyDescriptor,'Object.getOwnPropertyDescriptor');
  native(Object.getOwnPropertyNames,'Object.getOwnPropertyNames');
  native(Object.is,'Object.is');
  native(Object.isExtensible,'Object.isExtensible');
  native(Object.isFrozen,'Object.isFrozen');
  native(Object.isSealed,'Object.isSealed');
  native(Object.preventExtensions,'Object.preventExtensions');
  native(Object.seal,'Object.seal');
  native(Object.getOwnPropertySymbols,'Object.getOwnPropertySymbols');
  native(Object.deliverChangeRecords,'Object.deliverChangeRecords');
  native(Object.getNotifier,'Object.getNotifier');
  native(Object.observe,'Object.observe');
  native(Object.unobserve,'Object.unobserve');
  native(String.fromCharCode,'String.fromCharCode');
  native(String.fromCodePoint,'String.fromCodePoint');
  native(String.raw,'String.raw');
  native(ArrayBuffer.isView,'ArrayBuffer.isView');
  native(Symbol.for,'Symbol.for');
  native(Symbol.keyFor,'Symbol.keyFor');
  native(Error.captureStackTrace,'Error.captureStackTrace');
  native(Number.isFinite,'Number.isFinite');
  native(Number.isInteger,'Number.isInteger');
  native(Number.isNaN,'Number.isNaN');
  native(Number.isSafeInteger,'Number.isSafeInteger');
  native(Date.UTC,'Date.UTC');
  native(Date.parse,'Date.parse');
  native(Math.random,'Math.random');
  native(Math.abs,'Math.abs');
  native(Math.acos,'Math.acos');
  native(Math.asin,'Math.asin');
  native(Math.atan,'Math.atan');
  native(Math.ceil,'Math.ceil');
  native(Math.cos,'Math.cos');
  native(Math.exp,'Math.exp');
  native(Math.floor,'Math.floor');
  native(Math.log,'Math.log');
  native(Math.round,'Math.round');
  native(Math.sin,'Math.sin');
  native(Math.sqrt,'Math.sqrt');
  native(Math.tan,'Math.tan');
  native(Math.atan2,'Math.atan2');
  native(Math.pow,'Math.pow');
  native(Math.max,'Math.max');
  native(Math.min,'Math.min');
  native(Math.imul,'Math.imul');
  native(Math.sign,'Math.sign');
  native(Math.trunc,'Math.trunc');
  native(Math.sinh,'Math.sinh');
  native(Math.cosh,'Math.cosh');
  native(Math.tanh,'Math.tanh');
  native(Math.asinh,'Math.asinh');
  native(Math.acosh,'Math.acosh');
  native(Math.atanh,'Math.atanh');
  native(Math.log10,'Math.log10');
  native(Math.log2,'Math.log2');
  native(Math.hypot,'Math.hypot');
  native(Math.fround,'Math.fround');
  native(Math.clz32,'Math.clz32');
  native(Math.cbrt,'Math.cbrt');
  native(Math.log1p,'Math.log1p');
  native(Math.expm1,'Math.expm1');
  native(Promise.defer,'Promise.defer');
  native(Promise.accept,'Promise.accept');
  native(Promise.reject,'Promise.reject');
  native(Promise.all,'Promise.all');
  native(Promise.race,'Promise.race');
  native(Promise.resolve,'Promise.resolve');
  native(Map.prototype.get,'Map.prototype.get');
  native(Map.prototype.set,'Map.prototype.set');
  native(Map.prototype.has,'Map.prototype.has');
  native(Map.prototype.delete,'Map.prototype.delete');
  native(Map.prototype.clear,'Map.prototype.clear');
  native(Map.prototype.forEach,'Map.prototype.forEach');
  native(Map.prototype.entries,'Map.prototype.entries');
  native(Map.prototype.keys,'Map.prototype.keys');
  native(Map.prototype.values,'Map.prototype.values');
  native(Int16Array.prototype.subarray,'Int16Array.prototype.subarray');
  native(Int16Array.prototype.set,'Int16Array.prototype.set');
  native(Int16Array.prototype.entries,'Int16Array.prototype.entries');
  native(Int16Array.prototype.values,'Int16Array.prototype.values');
  native(Int16Array.prototype.keys,'Int16Array.prototype.keys');
  native(Promise.prototype.chain,'Promise.prototype.chain');
  native(Promise.prototype.then,'Promise.prototype.then');
  native(Promise.prototype.catch,'Promise.prototype.catch');
  native(Date.prototype.toString,'Date.prototype.toString');
  native(Date.prototype.toDateString,'Date.prototype.toDateString');
  native(Date.prototype.toTimeString,'Date.prototype.toTimeString');
  native(Date.prototype.toLocaleString,'Date.prototype.toLocaleString');
  native(Date.prototype.toLocaleDateString,'Date.prototype.toLocaleDateString');
  native(Date.prototype.toLocaleTimeString,'Date.prototype.toLocaleTimeString');
  native(Date.prototype.valueOf,'Date.prototype.valueOf');
  native(Date.prototype.getTime,'Date.prototype.getTime');
  native(Date.prototype.getFullYear,'Date.prototype.getFullYear');
  native(Date.prototype.getUTCFullYear,'Date.prototype.getUTCFullYear');
  native(Date.prototype.getMonth,'Date.prototype.getMonth');
  native(Date.prototype.getUTCMonth,'Date.prototype.getUTCMonth');
  native(Date.prototype.getDate,'Date.prototype.getDate');
  native(Date.prototype.getUTCDate,'Date.prototype.getUTCDate');
  native(Date.prototype.getDay,'Date.prototype.getDay');
  native(Date.prototype.getUTCDay,'Date.prototype.getUTCDay');
  native(Date.prototype.getHours,'Date.prototype.getHours');
  native(Date.prototype.getUTCHours,'Date.prototype.getUTCHours');
  native(Date.prototype.getMinutes,'Date.prototype.getMinutes');
  native(Date.prototype.getUTCMinutes,'Date.prototype.getUTCMinutes');
  native(Date.prototype.getSeconds,'Date.prototype.getSeconds');
  native(Date.prototype.getUTCSeconds,'Date.prototype.getUTCSeconds');
  native(Date.prototype.getMilliseconds,'Date.prototype.getMilliseconds');
  native(Date.prototype.getUTCMilliseconds,'Date.prototype.getUTCMilliseconds');
  native(Date.prototype.getTimezoneOffset,'Date.prototype.getTimezoneOffset');
  native(Date.prototype.setTime,'Date.prototype.setTime');
  native(Date.prototype.setMilliseconds,'Date.prototype.setMilliseconds');
  native(Date.prototype.setUTCMilliseconds,'Date.prototype.setUTCMilliseconds');
  native(Date.prototype.setSeconds,'Date.prototype.setSeconds');
  native(Date.prototype.setUTCSeconds,'Date.prototype.setUTCSeconds');
  native(Date.prototype.setMinutes,'Date.prototype.setMinutes');
  native(Date.prototype.setUTCMinutes,'Date.prototype.setUTCMinutes');
  native(Date.prototype.setHours,'Date.prototype.setHours');
  native(Date.prototype.setUTCHours,'Date.prototype.setUTCHours');
  native(Date.prototype.setDate,'Date.prototype.setDate');
  native(Date.prototype.setUTCDate,'Date.prototype.setUTCDate');
  native(Date.prototype.setMonth,'Date.prototype.setMonth');
  native(Date.prototype.setUTCMonth,'Date.prototype.setUTCMonth');
  native(Date.prototype.setFullYear,'Date.prototype.setFullYear');
  native(Date.prototype.setUTCFullYear,'Date.prototype.setUTCFullYear');
  native(Date.prototype.toGMTString,'Date.prototype.toGMTString');
  native(Date.prototype.toUTCString,'Date.prototype.toUTCString');
  native(Date.prototype.getYear,'Date.prototype.getYear');
  native(Date.prototype.setYear,'Date.prototype.setYear');
  native(Date.prototype.toISOString,'Date.prototype.toISOString');
  native(Date.prototype.toJSON,'Date.prototype.toJSON');
  native(Number.prototype.toString,'Number.prototype.toString');
  native(Number.prototype.toLocaleString,'Number.prototype.toLocaleString');
  native(Number.prototype.valueOf,'Number.prototype.valueOf');
  native(Number.prototype.toFixed,'Number.prototype.toFixed');
  native(Number.prototype.toExponential,'Number.prototype.toExponential');
  native(Number.prototype.toPrecision,'Number.prototype.toPrecision');
  native(Uint8Array.prototype.subarray,'Uint8Array.prototype.subarray');
  native(Boolean.prototype.toString,'Boolean.prototype.toString');
  native(Boolean.prototype.valueOf,'Boolean.prototype.valueOf');
  native(Error.prototype.toString,'Error.prototype.toString');
  native(Uint16Array.prototype.subarray,'Uint16Array.prototype.subarray');
  native(Int8Array.prototype.subarray,'Int8Array.prototype.subarray');
  native(WeakMap.prototype.get,'WeakMap.prototype.get');
  native(WeakMap.prototype.set,'WeakMap.prototype.set');
  native(WeakMap.prototype.has,'WeakMap.prototype.has');
  native(WeakMap.prototype.delete,'WeakMap.prototype.delete');
  native(Symbol.prototype.toString,'Symbol.prototype.toString');
  native(Symbol.prototype.valueOf,'Symbol.prototype.valueOf');
  native(chrome.runtime.connect,'chrome.runtime.connect');
  native(chrome.runtime.sendMessage,'chrome.runtime.sendMessage');
  native(chrome.app.getIsInstalled,'chrome.app.getIsInstalled');
  native(chrome.app.getDetails,'chrome.app.getDetails');
  native(chrome.app.getDetailsForFrame,'chrome.app.getDetailsForFrame');
  native(chrome.app.runningState,'chrome.app.runningState');
  native(Float64Array.prototype.subarray,'Float64Array.prototype.subarray');
  native(Uint8ClampedArray.prototype.subarray,'Uint8ClampedArray.prototype.subarray');
  native(Uint32Array.prototype.subarray,'Uint32Array.prototype.subarray');
  native(Int32Array.prototype.subarray,'Int32Array.prototype.subarray');
  native(ArrayBuffer.prototype.slice,'ArrayBuffer.prototype.slice');
  native(DataView.prototype.getInt8,'DataView.prototype.getInt8');
  native(DataView.prototype.setInt8,'DataView.prototype.setInt8');
  native(DataView.prototype.getUint8,'DataView.prototype.getUint8');
  native(DataView.prototype.setUint8,'DataView.prototype.setUint8');
  native(DataView.prototype.getInt16,'DataView.prototype.getInt16');
  native(DataView.prototype.setInt16,'DataView.prototype.setInt16');
  native(DataView.prototype.getUint16,'DataView.prototype.getUint16');
  native(DataView.prototype.setUint16,'DataView.prototype.setUint16');
  native(DataView.prototype.getInt32,'DataView.prototype.getInt32');
  native(DataView.prototype.setInt32,'DataView.prototype.setInt32');
  native(DataView.prototype.getUint32,'DataView.prototype.getUint32');
  native(DataView.prototype.setUint32,'DataView.prototype.setUint32');
  native(DataView.prototype.getFloat32,'DataView.prototype.getFloat32');
  native(DataView.prototype.setFloat32,'DataView.prototype.setFloat32');
  native(DataView.prototype.getFloat64,'DataView.prototype.getFloat64');
  native(DataView.prototype.setFloat64,'DataView.prototype.setFloat64');
  native(String.prototype.valueOf,'String.prototype.valueOf');
  native(String.prototype.toString,'String.prototype.toString');
  native(String.prototype.charAt,'String.prototype.charAt');
  native(String.prototype.charCodeAt,'String.prototype.charCodeAt');
  native(String.prototype.concat,'String.prototype.concat');
  native(String.prototype.indexOf,'String.prototype.indexOf');
  native(String.prototype.lastIndexOf,'String.prototype.lastIndexOf');
  native(String.prototype.localeCompare,'String.prototype.localeCompare');
  native(String.prototype.match,'String.prototype.match');
  native(String.prototype.normalize,'String.prototype.normalize');
  native(String.prototype.replace,'String.prototype.replace');
  native(String.prototype.search,'String.prototype.search');
  native(String.prototype.slice,'String.prototype.slice');
  native(String.prototype.split,'String.prototype.split');
  native(String.prototype.substring,'String.prototype.substring');
  native(String.prototype.substr,'String.prototype.substr');
  native(String.prototype.toLowerCase,'String.prototype.toLowerCase');
  native(String.prototype.toLocaleLowerCase,'String.prototype.toLocaleLowerCase');
  native(String.prototype.toUpperCase,'String.prototype.toUpperCase');
  native(String.prototype.toLocaleUpperCase,'String.prototype.toLocaleUpperCase');
  native(String.prototype.trim,'String.prototype.trim');
  native(String.prototype.trimLeft,'String.prototype.trimLeft');
  native(String.prototype.trimRight,'String.prototype.trimRight');
  native(String.prototype.link,'String.prototype.link');
  native(String.prototype.anchor,'String.prototype.anchor');
  native(String.prototype.fontcolor,'String.prototype.fontcolor');
  native(String.prototype.fontsize,'String.prototype.fontsize');
  native(String.prototype.big,'String.prototype.big');
  native(String.prototype.blink,'String.prototype.blink');
  native(String.prototype.bold,'String.prototype.bold');
  native(String.prototype.fixed,'String.prototype.fixed');
  native(String.prototype.italics,'String.prototype.italics');
  native(String.prototype.small,'String.prototype.small');
  native(String.prototype.strike,'String.prototype.strike');
  native(String.prototype.sub,'String.prototype.sub');
  native(String.prototype.sup,'String.prototype.sup');
  native(String.prototype.codePointAt,'String.prototype.codePointAt');
  native(String.prototype.includes,'String.prototype.includes');
  native(String.prototype.endsWith,'String.prototype.endsWith');
  native(String.prototype.repeat,'String.prototype.repeat');
  native(String.prototype.startsWith,'String.prototype.startsWith');
  native(Function.prototype.toString,'Function.prototype.toString');
  native(Function.prototype.call,'Function.prototype.call');
  native(Function.prototype.apply,'Function.prototype.apply');
  native(Set.prototype.add,'Set.prototype.add');
  native(Set.prototype.has,'Set.prototype.has');
  native(Set.prototype.delete,'Set.prototype.delete');
  native(Set.prototype.clear,'Set.prototype.clear');
  native(Set.prototype.forEach,'Set.prototype.forEach');
  native(Set.prototype.entries,'Set.prototype.entries');
  native(Set.prototype.keys,'Set.prototype.keys');
  native(Array.prototype.push,'Array.prototype.push');
  native(Array.prototype.sort,'Array.prototype.sort');
  native(Array.prototype.splice,'Array.prototype.splice');
  native(Float32Array.prototype.subarray,'Float32Array.prototype.subarray');
  native(Intl.v8BreakIterator.supportedLocalesOf,'Intl.v8BreakIterator.supportedLocalesOf');
  native(Intl.DateTimeFormat.supportedLocalesOf,'Intl.DateTimeFormat.supportedLocalesOf');
  native(Intl.NumberFormat.supportedLocalesOf,'Intl.NumberFormat.supportedLocalesOf');
  native(Intl.Collator.supportedLocalesOf,'Intl.Collator.supportedLocalesOf');
  native(WeakSet.prototype.add,'WeakSet.prototype.add');
  native(WeakSet.prototype.has,'WeakSet.prototype.has');
  native(WeakSet.prototype.delete,'WeakSet.prototype.delete');
  native(Array.prototype.toString,'Array.prototype.toString');
  native(Array.prototype.toLocaleString,'Array.prototype.toLocaleString');
  native(Array.prototype.join,'Array.prototype.join');
  native(Array.prototype.pop,'Array.prototype.pop');
  native(Array.prototype.concat,'Array.prototype.concat');
  native(Array.prototype.reverse,'Array.prototype.reverse');
  native(Array.prototype.shift,'Array.prototype.shift');
  native(Array.prototype.unshift,'Array.prototype.unshift');
  native(Array.prototype.slice,'Array.prototype.slice');
  native(Array.prototype.filter,'Array.prototype.filter');
  native(Array.prototype.forEach,'Array.prototype.forEach');
  native(Array.prototype.some,'Array.prototype.some');
  native(Array.prototype.every,'Array.prototype.every');
  native(Array.prototype.map,'Array.prototype.map');
  native(Array.prototype.indexOf,'Array.prototype.indexOf');
  native(Array.prototype.lastIndexOf,'Array.prototype.lastIndexOf');
  native(Array.prototype.reduce,'Array.prototype.reduce');
  native(Array.prototype.reduceRight,'Array.prototype.reduceRight');
  native(RegExp.prototype.exec,'RegExp.prototype.exec');
  native(RegExp.prototype.test,'RegExp.prototype.test');
  native(RegExp.prototype.toString,'RegExp.prototype.toString');
  native(RegExp.prototype.compile,'RegExp.prototype.compile');
  native(webkitOfflineAudioContext.prototype.startRendering,'webkitOfflineAudioContext.prototype.startRendering');
  native(webkitAudioContext.prototype.createBuffer,'webkitAudioContext.prototype.createBuffer');
  native(webkitAudioContext.prototype.decodeAudioData,'webkitAudioContext.prototype.decodeAudioData');
  native(webkitAudioContext.prototype.createBufferSource,'webkitAudioContext.prototype.createBufferSource');
  native(webkitAudioContext.prototype.createMediaElementSource,'webkitAudioContext.prototype.createMediaElementSource');
  native(webkitAudioContext.prototype.createMediaStreamSource,'webkitAudioContext.prototype.createMediaStreamSource');
  native(webkitAudioContext.prototype.createMediaStreamDestination,'webkitAudioContext.prototype.createMediaStreamDestination');
  native(webkitAudioContext.prototype.createGain,'webkitAudioContext.prototype.createGain');
  native(webkitAudioContext.prototype.createDelay,'webkitAudioContext.prototype.createDelay');
  native(webkitAudioContext.prototype.createBiquadFilter,'webkitAudioContext.prototype.createBiquadFilter');
  native(webkitAudioContext.prototype.createWaveShaper,'webkitAudioContext.prototype.createWaveShaper');
  native(webkitAudioContext.prototype.createPanner,'webkitAudioContext.prototype.createPanner');
  native(webkitAudioContext.prototype.createConvolver,'webkitAudioContext.prototype.createConvolver');
  native(webkitAudioContext.prototype.createDynamicsCompressor,'webkitAudioContext.prototype.createDynamicsCompressor');
  native(webkitAudioContext.prototype.createAnalyser,'webkitAudioContext.prototype.createAnalyser');
  native(webkitAudioContext.prototype.createScriptProcessor,'webkitAudioContext.prototype.createScriptProcessor');
  native(webkitAudioContext.prototype.createStereoPanner,'webkitAudioContext.prototype.createStereoPanner');
  native(webkitAudioContext.prototype.createOscillator,'webkitAudioContext.prototype.createOscillator');
  native(webkitAudioContext.prototype.createPeriodicWave,'webkitAudioContext.prototype.createPeriodicWave');
  native(webkitAudioContext.prototype.createChannelSplitter,'webkitAudioContext.prototype.createChannelSplitter');
  native(webkitAudioContext.prototype.createChannelMerger,'webkitAudioContext.prototype.createChannelMerger');
  native(webkitAudioContext.prototype.suspend,'webkitAudioContext.prototype.suspend');
  native(webkitAudioContext.prototype.resume,'webkitAudioContext.prototype.resume');
  native(webkitSpeechRecognition.prototype.start,'webkitSpeechRecognition.prototype.start');
  native(webkitSpeechRecognition.prototype.stop,'webkitSpeechRecognition.prototype.stop');
  native(webkitSpeechRecognition.prototype.abort,'webkitSpeechRecognition.prototype.abort');
  native(webkitSpeechGrammarList.prototype.item,'webkitSpeechGrammarList.prototype.item');
  native(webkitSpeechGrammarList.prototype.addFromUri,'webkitSpeechGrammarList.prototype.addFromUri');
  native(webkitSpeechGrammarList.prototype.addFromString,'webkitSpeechGrammarList.prototype.addFromString');
  native(webkitRTCPeerConnection.prototype.createOffer,'webkitRTCPeerConnection.prototype.createOffer');
  native(webkitRTCPeerConnection.prototype.createAnswer,'webkitRTCPeerConnection.prototype.createAnswer');
  native(webkitRTCPeerConnection.prototype.setLocalDescription,'webkitRTCPeerConnection.prototype.setLocalDescription');
  native(webkitRTCPeerConnection.prototype.setRemoteDescription,'webkitRTCPeerConnection.prototype.setRemoteDescription');
  native(webkitRTCPeerConnection.prototype.updateIce,'webkitRTCPeerConnection.prototype.updateIce');
  native(webkitRTCPeerConnection.prototype.addIceCandidate,'webkitRTCPeerConnection.prototype.addIceCandidate');
  native(webkitRTCPeerConnection.prototype.getLocalStreams,'webkitRTCPeerConnection.prototype.getLocalStreams');
  native(webkitRTCPeerConnection.prototype.getRemoteStreams,'webkitRTCPeerConnection.prototype.getRemoteStreams');
  native(webkitRTCPeerConnection.prototype.getStreamById,'webkitRTCPeerConnection.prototype.getStreamById');
  native(webkitRTCPeerConnection.prototype.addStream,'webkitRTCPeerConnection.prototype.addStream');
  native(webkitRTCPeerConnection.prototype.removeStream,'webkitRTCPeerConnection.prototype.removeStream');
  native(webkitRTCPeerConnection.prototype.getStats,'webkitRTCPeerConnection.prototype.getStats');
  native(webkitRTCPeerConnection.prototype.createDataChannel,'webkitRTCPeerConnection.prototype.createDataChannel');
  native(webkitRTCPeerConnection.prototype.createDTMFSender,'webkitRTCPeerConnection.prototype.createDTMFSender');
  native(webkitRTCPeerConnection.prototype.close,'webkitRTCPeerConnection.prototype.close');
  native(ServiceWorkerRegistration.prototype.unregister,'ServiceWorkerRegistration.prototype.unregister');
  native(ServiceWorkerContainer.prototype.register,'ServiceWorkerContainer.prototype.register');
  native(ServiceWorkerContainer.prototype.getRegistration,'ServiceWorkerContainer.prototype.getRegistration');
  native(ServiceWorker.prototype.postMessage,'ServiceWorker.prototype.postMessage');
  native(ServiceWorker.prototype.terminate,'ServiceWorker.prototype.terminate');
  native(ScreenOrientation.prototype.lock,'ScreenOrientation.prototype.lock');
  native(ScreenOrientation.prototype.unlock,'ScreenOrientation.prototype.unlock');
  native(Notification.prototype.close,'Notification.prototype.close');
  native(MediaSource.prototype.addSourceBuffer,'MediaSource.prototype.addSourceBuffer');
  native(MediaSource.prototype.removeSourceBuffer,'MediaSource.prototype.removeSourceBuffer');
  native(MediaSource.prototype.endOfStream,'MediaSource.prototype.endOfStream');
  native(webkitMediaStream.prototype.getAudioTracks,'webkitMediaStream.prototype.getAudioTracks');
  native(webkitMediaStream.prototype.getVideoTracks,'webkitMediaStream.prototype.getVideoTracks');
  native(webkitMediaStream.prototype.getTracks,'webkitMediaStream.prototype.getTracks');
  native(webkitMediaStream.prototype.addTrack,'webkitMediaStream.prototype.addTrack');
  native(webkitMediaStream.prototype.removeTrack,'webkitMediaStream.prototype.removeTrack');
  native(webkitMediaStream.prototype.getTrackById,'webkitMediaStream.prototype.getTrackById');
  native(webkitMediaStream.prototype.clone,'webkitMediaStream.prototype.clone');
  native(webkitMediaStream.prototype.stop,'webkitMediaStream.prototype.stop');
  native(webkitIDBTransaction.prototype.objectStore,'webkitIDBTransaction.prototype.objectStore');
  native(webkitIDBTransaction.prototype.abort,'webkitIDBTransaction.prototype.abort');
  native(webkitIDBObjectStore.prototype.put,'webkitIDBObjectStore.prototype.put');
  native(webkitIDBObjectStore.prototype.add,'webkitIDBObjectStore.prototype.add');
  native(webkitIDBObjectStore.prototype.delete,'webkitIDBObjectStore.prototype.delete');
  native(webkitIDBObjectStore.prototype.get,'webkitIDBObjectStore.prototype.get');
  native(webkitIDBObjectStore.prototype.clear,'webkitIDBObjectStore.prototype.clear');
  native(webkitIDBObjectStore.prototype.openCursor,'webkitIDBObjectStore.prototype.openCursor');
  native(webkitIDBObjectStore.prototype.createIndex,'webkitIDBObjectStore.prototype.createIndex');
  native(webkitIDBObjectStore.prototype.index,'webkitIDBObjectStore.prototype.index');
  native(webkitIDBObjectStore.prototype.deleteIndex,'webkitIDBObjectStore.prototype.deleteIndex');
  native(webkitIDBObjectStore.prototype.count,'webkitIDBObjectStore.prototype.count');
  native(webkitIDBIndex.prototype.openCursor,'webkitIDBIndex.prototype.openCursor');
  native(webkitIDBIndex.prototype.openKeyCursor,'webkitIDBIndex.prototype.openKeyCursor');
  native(webkitIDBIndex.prototype.get,'webkitIDBIndex.prototype.get');
  native(webkitIDBIndex.prototype.getKey,'webkitIDBIndex.prototype.getKey');
  native(webkitIDBIndex.prototype.count,'webkitIDBIndex.prototype.count');
  native(webkitIDBFactory.prototype.webkitGetDatabaseNames,'webkitIDBFactory.prototype.webkitGetDatabaseNames');
  native(webkitIDBFactory.prototype.open,'webkitIDBFactory.prototype.open');
  native(webkitIDBFactory.prototype.deleteDatabase,'webkitIDBFactory.prototype.deleteDatabase');
  native(webkitIDBFactory.prototype.cmp,'webkitIDBFactory.prototype.cmp');
  native(webkitIDBDatabase.prototype.createObjectStore,'webkitIDBDatabase.prototype.createObjectStore');
  native(webkitIDBDatabase.prototype.deleteObjectStore,'webkitIDBDatabase.prototype.deleteObjectStore');
  native(webkitIDBDatabase.prototype.transaction,'webkitIDBDatabase.prototype.transaction');
  native(webkitIDBDatabase.prototype.close,'webkitIDBDatabase.prototype.close');
  native(webkitIDBCursor.prototype.update,'webkitIDBCursor.prototype.update');
  native(webkitIDBCursor.prototype.advance,'webkitIDBCursor.prototype.advance');
  native(webkitIDBCursor.prototype.continue,'webkitIDBCursor.prototype.continue');
  native(webkitIDBCursor.prototype.delete,'webkitIDBCursor.prototype.delete');
  native(WebSocket.prototype.close,'WebSocket.prototype.close');
  native(WebSocket.prototype.send,'WebSocket.prototype.send');
  native(TextEncoder.prototype.encode,'TextEncoder.prototype.encode');
  native(TextDecoder.prototype.decode,'TextDecoder.prototype.decode');
  native(MediaStreamTrack.prototype.stop,'MediaStreamTrack.prototype.stop');
  native(MediaStreamTrack.prototype.clone,'MediaStreamTrack.prototype.clone');
  native(DeviceOrientationEvent.prototype.initDeviceOrientationEvent,'DeviceOrientationEvent.prototype.initDeviceOrientationEvent');
  native(DeviceMotionEvent.prototype.initDeviceMotionEvent,'DeviceMotionEvent.prototype.initDeviceMotionEvent');
  native(OscillatorNode.prototype.start,'OscillatorNode.prototype.start');
  native(OscillatorNode.prototype.stop,'OscillatorNode.prototype.stop');
  native(OscillatorNode.prototype.setPeriodicWave,'OscillatorNode.prototype.setPeriodicWave');
  native(BiquadFilterNode.prototype.getFrequencyResponse,'BiquadFilterNode.prototype.getFrequencyResponse');
  native(AudioParam.prototype.setValueAtTime,'AudioParam.prototype.setValueAtTime');
  native(AudioParam.prototype.linearRampToValueAtTime,'AudioParam.prototype.linearRampToValueAtTime');
  native(AudioParam.prototype.exponentialRampToValueAtTime,'AudioParam.prototype.exponentialRampToValueAtTime');
  native(AudioParam.prototype.setTargetAtTime,'AudioParam.prototype.setTargetAtTime');
  native(AudioParam.prototype.setValueCurveAtTime,'AudioParam.prototype.setValueCurveAtTime');
  native(AudioParam.prototype.cancelScheduledValues,'AudioParam.prototype.cancelScheduledValues');
  native(AudioNode.prototype.connect,'AudioNode.prototype.connect');
  native(AudioNode.prototype.disconnect,'AudioNode.prototype.disconnect');
  native(AudioListener.prototype.setPosition,'AudioListener.prototype.setPosition');
  native(AudioListener.prototype.setOrientation,'AudioListener.prototype.setOrientation');
  native(AudioListener.prototype.setVelocity,'AudioListener.prototype.setVelocity');
  native(AudioBufferSourceNode.prototype.start,'AudioBufferSourceNode.prototype.start');
  native(AudioBufferSourceNode.prototype.stop,'AudioBufferSourceNode.prototype.stop');
  native(AudioBuffer.prototype.getChannelData,'AudioBuffer.prototype.getChannelData');
  native(AnalyserNode.prototype.getFloatFrequencyData,'AnalyserNode.prototype.getFloatFrequencyData');
  native(AnalyserNode.prototype.getByteFrequencyData,'AnalyserNode.prototype.getByteFrequencyData');
  native(AnalyserNode.prototype.getFloatTimeDomainData,'AnalyserNode.prototype.getFloatTimeDomainData');
  native(AnalyserNode.prototype.getByteTimeDomainData,'AnalyserNode.prototype.getByteTimeDomainData');
  native(XSLTProcessor.prototype.importStylesheet,'XSLTProcessor.prototype.importStylesheet');
  native(XSLTProcessor.prototype.transformToFragment,'XSLTProcessor.prototype.transformToFragment');
  native(XSLTProcessor.prototype.transformToDocument,'XSLTProcessor.prototype.transformToDocument');
  native(XSLTProcessor.prototype.setParameter,'XSLTProcessor.prototype.setParameter');
  native(XSLTProcessor.prototype.getParameter,'XSLTProcessor.prototype.getParameter');
  native(XSLTProcessor.prototype.removeParameter,'XSLTProcessor.prototype.removeParameter');
  native(XSLTProcessor.prototype.clearParameters,'XSLTProcessor.prototype.clearParameters');
  native(XSLTProcessor.prototype.reset,'XSLTProcessor.prototype.reset');
  native(SVGTransformList.prototype.clear,'SVGTransformList.prototype.clear');
  native(SVGTransformList.prototype.initialize,'SVGTransformList.prototype.initialize');
  native(SVGTransformList.prototype.getItem,'SVGTransformList.prototype.getItem');
  native(SVGTransformList.prototype.insertItemBefore,'SVGTransformList.prototype.insertItemBefore');
  native(SVGTransformList.prototype.replaceItem,'SVGTransformList.prototype.replaceItem');
  native(SVGTransformList.prototype.removeItem,'SVGTransformList.prototype.removeItem');
  native(SVGTransformList.prototype.appendItem,'SVGTransformList.prototype.appendItem');
  native(SVGTransformList.prototype.createSVGTransformFromMatrix,'SVGTransformList.prototype.createSVGTransformFromMatrix');
  native(SVGTransformList.prototype.consolidate,'SVGTransformList.prototype.consolidate');
  native(SVGTransform.prototype.setMatrix,'SVGTransform.prototype.setMatrix');
  native(SVGTransform.prototype.setTranslate,'SVGTransform.prototype.setTranslate');
  native(SVGTransform.prototype.setScale,'SVGTransform.prototype.setScale');
  native(SVGTransform.prototype.setRotate,'SVGTransform.prototype.setRotate');
  native(SVGTransform.prototype.setSkewX,'SVGTransform.prototype.setSkewX');
  native(SVGTransform.prototype.setSkewY,'SVGTransform.prototype.setSkewY');
  native(SVGStringList.prototype.clear,'SVGStringList.prototype.clear');
  native(SVGStringList.prototype.initialize,'SVGStringList.prototype.initialize');
  native(SVGStringList.prototype.getItem,'SVGStringList.prototype.getItem');
  native(SVGStringList.prototype.insertItemBefore,'SVGStringList.prototype.insertItemBefore');
  native(SVGStringList.prototype.replaceItem,'SVGStringList.prototype.replaceItem');
  native(SVGStringList.prototype.removeItem,'SVGStringList.prototype.removeItem');
  native(SVGStringList.prototype.appendItem,'SVGStringList.prototype.appendItem');
  native(SVGPointList.prototype.clear,'SVGPointList.prototype.clear');
  native(SVGPointList.prototype.initialize,'SVGPointList.prototype.initialize');
  native(SVGPointList.prototype.getItem,'SVGPointList.prototype.getItem');
  native(SVGPointList.prototype.insertItemBefore,'SVGPointList.prototype.insertItemBefore');
  native(SVGPointList.prototype.replaceItem,'SVGPointList.prototype.replaceItem');
  native(SVGPointList.prototype.removeItem,'SVGPointList.prototype.removeItem');
  native(SVGPointList.prototype.appendItem,'SVGPointList.prototype.appendItem');
  native(SVGPathSegList.prototype.clear,'SVGPathSegList.prototype.clear');
  native(SVGPathSegList.prototype.initialize,'SVGPathSegList.prototype.initialize');
  native(SVGPathSegList.prototype.getItem,'SVGPathSegList.prototype.getItem');
  native(SVGPathSegList.prototype.insertItemBefore,'SVGPathSegList.prototype.insertItemBefore');
  native(SVGPathSegList.prototype.replaceItem,'SVGPathSegList.prototype.replaceItem');
  native(SVGPathSegList.prototype.removeItem,'SVGPathSegList.prototype.removeItem');
  native(SVGPathSegList.prototype.appendItem,'SVGPathSegList.prototype.appendItem');
  native(SVGNumberList.prototype.clear,'SVGNumberList.prototype.clear');
  native(SVGNumberList.prototype.initialize,'SVGNumberList.prototype.initialize');
  native(SVGNumberList.prototype.getItem,'SVGNumberList.prototype.getItem');
  native(SVGNumberList.prototype.insertItemBefore,'SVGNumberList.prototype.insertItemBefore');
  native(SVGNumberList.prototype.replaceItem,'SVGNumberList.prototype.replaceItem');
  native(SVGNumberList.prototype.removeItem,'SVGNumberList.prototype.removeItem');
  native(SVGNumberList.prototype.appendItem,'SVGNumberList.prototype.appendItem');
  native(SVGLengthList.prototype.clear,'SVGLengthList.prototype.clear');
  native(SVGLengthList.prototype.initialize,'SVGLengthList.prototype.initialize');
  native(SVGLengthList.prototype.getItem,'SVGLengthList.prototype.getItem');
  native(SVGLengthList.prototype.insertItemBefore,'SVGLengthList.prototype.insertItemBefore');
  native(SVGLengthList.prototype.replaceItem,'SVGLengthList.prototype.replaceItem');
  native(SVGLengthList.prototype.removeItem,'SVGLengthList.prototype.removeItem');
  native(SVGLengthList.prototype.appendItem,'SVGLengthList.prototype.appendItem');
  native(SVGLength.prototype.newValueSpecifiedUnits,'SVGLength.prototype.newValueSpecifiedUnits');
  native(SVGLength.prototype.convertToSpecifiedUnits,'SVGLength.prototype.convertToSpecifiedUnits');
  native(TimeRanges.prototype.start,'TimeRanges.prototype.start');
  native(TimeRanges.prototype.end,'TimeRanges.prototype.end');
  native(HTMLVideoElement.prototype.webkitEnterFullscreen,'HTMLVideoElement.prototype.webkitEnterFullscreen');
  native(HTMLVideoElement.prototype.webkitExitFullscreen,'HTMLVideoElement.prototype.webkitExitFullscreen');
  native(HTMLVideoElement.prototype.webkitEnterFullScreen,'HTMLVideoElement.prototype.webkitEnterFullScreen');
  native(HTMLVideoElement.prototype.webkitExitFullScreen,'HTMLVideoElement.prototype.webkitExitFullScreen');
  native(HTMLMediaElement.prototype.load,'HTMLMediaElement.prototype.load');
  native(HTMLMediaElement.prototype.canPlayType,'HTMLMediaElement.prototype.canPlayType');
  native(HTMLMediaElement.prototype.play,'HTMLMediaElement.prototype.play');
  native(HTMLMediaElement.prototype.pause,'HTMLMediaElement.prototype.pause');
  native(HTMLMediaElement.prototype.addTextTrack,'HTMLMediaElement.prototype.addTextTrack');
  native(HTMLMediaElement.prototype.webkitGenerateKeyRequest,'HTMLMediaElement.prototype.webkitGenerateKeyRequest');
  native(HTMLMediaElement.prototype.webkitAddKey,'HTMLMediaElement.prototype.webkitAddKey');
  native(HTMLMediaElement.prototype.webkitCancelKeyRequest,'HTMLMediaElement.prototype.webkitCancelKeyRequest');
  native(XPathResult.prototype.iterateNext,'XPathResult.prototype.iterateNext');
  native(XPathResult.prototype.snapshotItem,'XPathResult.prototype.snapshotItem');
  native(XPathExpression.prototype.evaluate,'XPathExpression.prototype.evaluate');
  native(XPathEvaluator.prototype.createExpression,'XPathEvaluator.prototype.createExpression');
  native(XPathEvaluator.prototype.createNSResolver,'XPathEvaluator.prototype.createNSResolver');
  native(XPathEvaluator.prototype.evaluate,'XPathEvaluator.prototype.evaluate');
  native(XMLSerializer.prototype.serializeToString,'XMLSerializer.prototype.serializeToString');
  native(XMLHttpRequest.prototype.open,'XMLHttpRequest.prototype.open');
  native(XMLHttpRequest.prototype.setRequestHeader,'XMLHttpRequest.prototype.setRequestHeader');
  native(XMLHttpRequest.prototype.send,'XMLHttpRequest.prototype.send');
  native(XMLHttpRequest.prototype.abort,'XMLHttpRequest.prototype.abort');
  native(XMLHttpRequest.prototype.getAllResponseHeaders,'XMLHttpRequest.prototype.getAllResponseHeaders');
  native(XMLHttpRequest.prototype.getResponseHeader,'XMLHttpRequest.prototype.getResponseHeader');
  native(XMLHttpRequest.prototype.overrideMimeType,'XMLHttpRequest.prototype.overrideMimeType');
  native(Worker.prototype.postMessage,'Worker.prototype.postMessage');
  native(Worker.prototype.terminate,'Worker.prototype.terminate');
  native(Window.prototype.toString,'Window.prototype.toString');
  native(Window.prototype.postMessage,'Window.prototype.postMessage');
  native(Window.prototype.close,'Window.prototype.close');
  native(Window.prototype.blur,'Window.prototype.blur');
  native(Window.prototype.focus,'Window.prototype.focus');
  native(Window.prototype.getSelection,'Window.prototype.getSelection');
  native(Window.prototype.print,'Window.prototype.print');
  native(Window.prototype.stop,'Window.prototype.stop');
  native(Window.prototype.open,'Window.prototype.open');
  native(Window.prototype.alert,'Window.prototype.alert');
  native(Window.prototype.confirm,'Window.prototype.confirm');
  native(Window.prototype.prompt,'Window.prototype.prompt');
  native(Window.prototype.find,'Window.prototype.find');
  native(Window.prototype.moveBy,'Window.prototype.moveBy');
  native(Window.prototype.moveTo,'Window.prototype.moveTo');
  native(Window.prototype.resizeBy,'Window.prototype.resizeBy');
  native(Window.prototype.resizeTo,'Window.prototype.resizeTo');
  native(Window.prototype.matchMedia,'Window.prototype.matchMedia');
  native(Window.prototype.getComputedStyle,'Window.prototype.getComputedStyle');
  native(Window.prototype.getMatchedCSSRules,'Window.prototype.getMatchedCSSRules');
  native(Window.prototype.requestAnimationFrame,'Window.prototype.requestAnimationFrame');
  native(Window.prototype.cancelAnimationFrame,'Window.prototype.cancelAnimationFrame');
  native(Window.prototype.webkitRequestAnimationFrame,'Window.prototype.webkitRequestAnimationFrame');
  native(Window.prototype.webkitCancelAnimationFrame,'Window.prototype.webkitCancelAnimationFrame');
  native(Window.prototype.webkitCancelRequestAnimationFrame,'Window.prototype.webkitCancelRequestAnimationFrame');
  native(Window.prototype.captureEvents,'Window.prototype.captureEvents');
  native(Window.prototype.releaseEvents,'Window.prototype.releaseEvents');
  native(Window.prototype.btoa,'Window.prototype.btoa');
  native(Window.prototype.atob,'Window.prototype.atob');
  native(Window.prototype.setTimeout,'Window.prototype.setTimeout');
  native(Window.prototype.clearTimeout,'Window.prototype.clearTimeout');
  native(Window.prototype.setInterval,'Window.prototype.setInterval');
  native(Window.prototype.clearInterval,'Window.prototype.clearInterval');
  native(Window.prototype.scrollBy,'Window.prototype.scrollBy');
  native(Window.prototype.scrollTo,'Window.prototype.scrollTo');
  native(Window.prototype.scroll,'Window.prototype.scroll');
  native(Window.prototype.webkitRequestFileSystem,'Window.prototype.webkitRequestFileSystem');
  native(Window.prototype.webkitResolveLocalFileSystemURL,'Window.prototype.webkitResolveLocalFileSystemURL');
  native(Window.prototype.openDatabase,'Window.prototype.openDatabase');
  native(WebKitCSSMatrix.prototype.setMatrixValue,'WebKitCSSMatrix.prototype.setMatrixValue');
  native(WebKitCSSMatrix.prototype.multiply,'WebKitCSSMatrix.prototype.multiply');
  native(WebKitCSSMatrix.prototype.inverse,'WebKitCSSMatrix.prototype.inverse');
  native(WebKitCSSMatrix.prototype.translate,'WebKitCSSMatrix.prototype.translate');
  native(WebKitCSSMatrix.prototype.scale,'WebKitCSSMatrix.prototype.scale');
  native(WebKitCSSMatrix.prototype.rotate,'WebKitCSSMatrix.prototype.rotate');
  native(WebKitCSSMatrix.prototype.rotateAxisAngle,'WebKitCSSMatrix.prototype.rotateAxisAngle');
  native(WebKitCSSMatrix.prototype.skewX,'WebKitCSSMatrix.prototype.skewX');
  native(WebKitCSSMatrix.prototype.skewY,'WebKitCSSMatrix.prototype.skewY');
  native(WebKitCSSMatrix.prototype.toString,'WebKitCSSMatrix.prototype.toString');
  native(WebGLRenderingContext.prototype.activeTexture,'WebGLRenderingContext.prototype.activeTexture');
  native(WebGLRenderingContext.prototype.attachShader,'WebGLRenderingContext.prototype.attachShader');
  native(WebGLRenderingContext.prototype.bindAttribLocation,'WebGLRenderingContext.prototype.bindAttribLocation');
  native(WebGLRenderingContext.prototype.bindBuffer,'WebGLRenderingContext.prototype.bindBuffer');
  native(WebGLRenderingContext.prototype.bindFramebuffer,'WebGLRenderingContext.prototype.bindFramebuffer');
  native(WebGLRenderingContext.prototype.bindRenderbuffer,'WebGLRenderingContext.prototype.bindRenderbuffer');
  native(WebGLRenderingContext.prototype.bindTexture,'WebGLRenderingContext.prototype.bindTexture');
  native(WebGLRenderingContext.prototype.blendColor,'WebGLRenderingContext.prototype.blendColor');
  native(WebGLRenderingContext.prototype.blendEquation,'WebGLRenderingContext.prototype.blendEquation');
  native(WebGLRenderingContext.prototype.blendEquationSeparate,'WebGLRenderingContext.prototype.blendEquationSeparate');
  native(WebGLRenderingContext.prototype.blendFunc,'WebGLRenderingContext.prototype.blendFunc');
  native(WebGLRenderingContext.prototype.blendFuncSeparate,'WebGLRenderingContext.prototype.blendFuncSeparate');
  native(WebGLRenderingContext.prototype.bufferData,'WebGLRenderingContext.prototype.bufferData');
  native(WebGLRenderingContext.prototype.bufferSubData,'WebGLRenderingContext.prototype.bufferSubData');
  native(WebGLRenderingContext.prototype.checkFramebufferStatus,'WebGLRenderingContext.prototype.checkFramebufferStatus');
  native(WebGLRenderingContext.prototype.clear,'WebGLRenderingContext.prototype.clear');
  native(WebGLRenderingContext.prototype.clearColor,'WebGLRenderingContext.prototype.clearColor');
  native(WebGLRenderingContext.prototype.clearDepth,'WebGLRenderingContext.prototype.clearDepth');
  native(WebGLRenderingContext.prototype.clearStencil,'WebGLRenderingContext.prototype.clearStencil');
  native(WebGLRenderingContext.prototype.colorMask,'WebGLRenderingContext.prototype.colorMask');
  native(WebGLRenderingContext.prototype.compileShader,'WebGLRenderingContext.prototype.compileShader');
  native(WebGLRenderingContext.prototype.compressedTexImage2D,'WebGLRenderingContext.prototype.compressedTexImage2D');
  native(WebGLRenderingContext.prototype.compressedTexSubImage2D,'WebGLRenderingContext.prototype.compressedTexSubImage2D');
  native(WebGLRenderingContext.prototype.copyTexImage2D,'WebGLRenderingContext.prototype.copyTexImage2D');
  native(WebGLRenderingContext.prototype.copyTexSubImage2D,'WebGLRenderingContext.prototype.copyTexSubImage2D');
  native(WebGLRenderingContext.prototype.createBuffer,'WebGLRenderingContext.prototype.createBuffer');
  native(WebGLRenderingContext.prototype.createFramebuffer,'WebGLRenderingContext.prototype.createFramebuffer');
  native(WebGLRenderingContext.prototype.createProgram,'WebGLRenderingContext.prototype.createProgram');
  native(WebGLRenderingContext.prototype.createRenderbuffer,'WebGLRenderingContext.prototype.createRenderbuffer');
  native(WebGLRenderingContext.prototype.createShader,'WebGLRenderingContext.prototype.createShader');
  native(WebGLRenderingContext.prototype.createTexture,'WebGLRenderingContext.prototype.createTexture');
  native(WebGLRenderingContext.prototype.cullFace,'WebGLRenderingContext.prototype.cullFace');
  native(WebGLRenderingContext.prototype.deleteBuffer,'WebGLRenderingContext.prototype.deleteBuffer');
  native(WebGLRenderingContext.prototype.deleteFramebuffer,'WebGLRenderingContext.prototype.deleteFramebuffer');
  native(WebGLRenderingContext.prototype.deleteProgram,'WebGLRenderingContext.prototype.deleteProgram');
  native(WebGLRenderingContext.prototype.deleteRenderbuffer,'WebGLRenderingContext.prototype.deleteRenderbuffer');
  native(WebGLRenderingContext.prototype.deleteShader,'WebGLRenderingContext.prototype.deleteShader');
  native(WebGLRenderingContext.prototype.deleteTexture,'WebGLRenderingContext.prototype.deleteTexture');
  native(WebGLRenderingContext.prototype.depthFunc,'WebGLRenderingContext.prototype.depthFunc');
  native(WebGLRenderingContext.prototype.depthMask,'WebGLRenderingContext.prototype.depthMask');
  native(WebGLRenderingContext.prototype.depthRange,'WebGLRenderingContext.prototype.depthRange');
  native(WebGLRenderingContext.prototype.detachShader,'WebGLRenderingContext.prototype.detachShader');
  native(WebGLRenderingContext.prototype.disable,'WebGLRenderingContext.prototype.disable');
  native(WebGLRenderingContext.prototype.disableVertexAttribArray,'WebGLRenderingContext.prototype.disableVertexAttribArray');
  native(WebGLRenderingContext.prototype.drawArrays,'WebGLRenderingContext.prototype.drawArrays');
  native(WebGLRenderingContext.prototype.drawElements,'WebGLRenderingContext.prototype.drawElements');
  native(WebGLRenderingContext.prototype.enable,'WebGLRenderingContext.prototype.enable');
  native(WebGLRenderingContext.prototype.enableVertexAttribArray,'WebGLRenderingContext.prototype.enableVertexAttribArray');
  native(WebGLRenderingContext.prototype.finish,'WebGLRenderingContext.prototype.finish');
  native(WebGLRenderingContext.prototype.flush,'WebGLRenderingContext.prototype.flush');
  native(WebGLRenderingContext.prototype.framebufferRenderbuffer,'WebGLRenderingContext.prototype.framebufferRenderbuffer');
  native(WebGLRenderingContext.prototype.framebufferTexture2D,'WebGLRenderingContext.prototype.framebufferTexture2D');
  native(WebGLRenderingContext.prototype.frontFace,'WebGLRenderingContext.prototype.frontFace');
  native(WebGLRenderingContext.prototype.generateMipmap,'WebGLRenderingContext.prototype.generateMipmap');
  native(WebGLRenderingContext.prototype.getActiveAttrib,'WebGLRenderingContext.prototype.getActiveAttrib');
  native(WebGLRenderingContext.prototype.getActiveUniform,'WebGLRenderingContext.prototype.getActiveUniform');
  native(WebGLRenderingContext.prototype.getAttachedShaders,'WebGLRenderingContext.prototype.getAttachedShaders');
  native(WebGLRenderingContext.prototype.getAttribLocation,'WebGLRenderingContext.prototype.getAttribLocation');
  native(WebGLRenderingContext.prototype.getBufferParameter,'WebGLRenderingContext.prototype.getBufferParameter');
  native(WebGLRenderingContext.prototype.getContextAttributes,'WebGLRenderingContext.prototype.getContextAttributes');
  native(WebGLRenderingContext.prototype.getError,'WebGLRenderingContext.prototype.getError');
  native(WebGLRenderingContext.prototype.getExtension,'WebGLRenderingContext.prototype.getExtension');
  native(WebGLRenderingContext.prototype.getFramebufferAttachmentParameter,'WebGLRenderingContext.prototype.getFramebufferAttachmentParameter');
  native(WebGLRenderingContext.prototype.getParameter,'WebGLRenderingContext.prototype.getParameter');
  native(WebGLRenderingContext.prototype.getProgramParameter,'WebGLRenderingContext.prototype.getProgramParameter');
  native(WebGLRenderingContext.prototype.getProgramInfoLog,'WebGLRenderingContext.prototype.getProgramInfoLog');
  native(WebGLRenderingContext.prototype.getRenderbufferParameter,'WebGLRenderingContext.prototype.getRenderbufferParameter');
  native(WebGLRenderingContext.prototype.getShaderParameter,'WebGLRenderingContext.prototype.getShaderParameter');
  native(WebGLRenderingContext.prototype.getShaderInfoLog,'WebGLRenderingContext.prototype.getShaderInfoLog');
  native(WebGLRenderingContext.prototype.getShaderPrecisionFormat,'WebGLRenderingContext.prototype.getShaderPrecisionFormat');
  native(WebGLRenderingContext.prototype.getShaderSource,'WebGLRenderingContext.prototype.getShaderSource');
  native(WebGLRenderingContext.prototype.getSupportedExtensions,'WebGLRenderingContext.prototype.getSupportedExtensions');
  native(WebGLRenderingContext.prototype.getTexParameter,'WebGLRenderingContext.prototype.getTexParameter');
  native(WebGLRenderingContext.prototype.getUniform,'WebGLRenderingContext.prototype.getUniform');
  native(WebGLRenderingContext.prototype.getUniformLocation,'WebGLRenderingContext.prototype.getUniformLocation');
  native(WebGLRenderingContext.prototype.getVertexAttrib,'WebGLRenderingContext.prototype.getVertexAttrib');
  native(WebGLRenderingContext.prototype.getVertexAttribOffset,'WebGLRenderingContext.prototype.getVertexAttribOffset');
  native(WebGLRenderingContext.prototype.hint,'WebGLRenderingContext.prototype.hint');
  native(WebGLRenderingContext.prototype.isBuffer,'WebGLRenderingContext.prototype.isBuffer');
  native(WebGLRenderingContext.prototype.isContextLost,'WebGLRenderingContext.prototype.isContextLost');
  native(WebGLRenderingContext.prototype.isEnabled,'WebGLRenderingContext.prototype.isEnabled');
  native(WebGLRenderingContext.prototype.isFramebuffer,'WebGLRenderingContext.prototype.isFramebuffer');
  native(WebGLRenderingContext.prototype.isProgram,'WebGLRenderingContext.prototype.isProgram');
  native(WebGLRenderingContext.prototype.isRenderbuffer,'WebGLRenderingContext.prototype.isRenderbuffer');
  native(WebGLRenderingContext.prototype.isShader,'WebGLRenderingContext.prototype.isShader');
  native(WebGLRenderingContext.prototype.isTexture,'WebGLRenderingContext.prototype.isTexture');
  native(WebGLRenderingContext.prototype.lineWidth,'WebGLRenderingContext.prototype.lineWidth');
  native(WebGLRenderingContext.prototype.linkProgram,'WebGLRenderingContext.prototype.linkProgram');
  native(WebGLRenderingContext.prototype.pixelStorei,'WebGLRenderingContext.prototype.pixelStorei');
  native(WebGLRenderingContext.prototype.polygonOffset,'WebGLRenderingContext.prototype.polygonOffset');
  native(WebGLRenderingContext.prototype.readPixels,'WebGLRenderingContext.prototype.readPixels');
  native(WebGLRenderingContext.prototype.renderbufferStorage,'WebGLRenderingContext.prototype.renderbufferStorage');
  native(WebGLRenderingContext.prototype.sampleCoverage,'WebGLRenderingContext.prototype.sampleCoverage');
  native(WebGLRenderingContext.prototype.scissor,'WebGLRenderingContext.prototype.scissor');
  native(WebGLRenderingContext.prototype.shaderSource,'WebGLRenderingContext.prototype.shaderSource');
  native(WebGLRenderingContext.prototype.stencilFunc,'WebGLRenderingContext.prototype.stencilFunc');
  native(WebGLRenderingContext.prototype.stencilFuncSeparate,'WebGLRenderingContext.prototype.stencilFuncSeparate');
  native(WebGLRenderingContext.prototype.stencilMask,'WebGLRenderingContext.prototype.stencilMask');
  native(WebGLRenderingContext.prototype.stencilMaskSeparate,'WebGLRenderingContext.prototype.stencilMaskSeparate');
  native(WebGLRenderingContext.prototype.stencilOp,'WebGLRenderingContext.prototype.stencilOp');
  native(WebGLRenderingContext.prototype.stencilOpSeparate,'WebGLRenderingContext.prototype.stencilOpSeparate');
  native(WebGLRenderingContext.prototype.texParameterf,'WebGLRenderingContext.prototype.texParameterf');
  native(WebGLRenderingContext.prototype.texParameteri,'WebGLRenderingContext.prototype.texParameteri');
  native(WebGLRenderingContext.prototype.texImage2D,'WebGLRenderingContext.prototype.texImage2D');
  native(WebGLRenderingContext.prototype.texSubImage2D,'WebGLRenderingContext.prototype.texSubImage2D');
  native(WebGLRenderingContext.prototype.uniform1f,'WebGLRenderingContext.prototype.uniform1f');
  native(WebGLRenderingContext.prototype.uniform1fv,'WebGLRenderingContext.prototype.uniform1fv');
  native(WebGLRenderingContext.prototype.uniform1i,'WebGLRenderingContext.prototype.uniform1i');
  native(WebGLRenderingContext.prototype.uniform1iv,'WebGLRenderingContext.prototype.uniform1iv');
  native(WebGLRenderingContext.prototype.uniform2f,'WebGLRenderingContext.prototype.uniform2f');
  native(WebGLRenderingContext.prototype.uniform2fv,'WebGLRenderingContext.prototype.uniform2fv');
  native(WebGLRenderingContext.prototype.uniform2i,'WebGLRenderingContext.prototype.uniform2i');
  native(WebGLRenderingContext.prototype.uniform2iv,'WebGLRenderingContext.prototype.uniform2iv');
  native(WebGLRenderingContext.prototype.uniform3f,'WebGLRenderingContext.prototype.uniform3f');
  native(WebGLRenderingContext.prototype.uniform3fv,'WebGLRenderingContext.prototype.uniform3fv');
  native(WebGLRenderingContext.prototype.uniform3i,'WebGLRenderingContext.prototype.uniform3i');
  native(WebGLRenderingContext.prototype.uniform3iv,'WebGLRenderingContext.prototype.uniform3iv');
  native(WebGLRenderingContext.prototype.uniform4f,'WebGLRenderingContext.prototype.uniform4f');
  native(WebGLRenderingContext.prototype.uniform4fv,'WebGLRenderingContext.prototype.uniform4fv');
  native(WebGLRenderingContext.prototype.uniform4i,'WebGLRenderingContext.prototype.uniform4i');
  native(WebGLRenderingContext.prototype.uniform4iv,'WebGLRenderingContext.prototype.uniform4iv');
  native(WebGLRenderingContext.prototype.uniformMatrix2fv,'WebGLRenderingContext.prototype.uniformMatrix2fv');
  native(WebGLRenderingContext.prototype.uniformMatrix3fv,'WebGLRenderingContext.prototype.uniformMatrix3fv');
  native(WebGLRenderingContext.prototype.uniformMatrix4fv,'WebGLRenderingContext.prototype.uniformMatrix4fv');
  native(WebGLRenderingContext.prototype.useProgram,'WebGLRenderingContext.prototype.useProgram');
  native(WebGLRenderingContext.prototype.validateProgram,'WebGLRenderingContext.prototype.validateProgram');
  native(WebGLRenderingContext.prototype.vertexAttrib1f,'WebGLRenderingContext.prototype.vertexAttrib1f');
  native(WebGLRenderingContext.prototype.vertexAttrib1fv,'WebGLRenderingContext.prototype.vertexAttrib1fv');
  native(WebGLRenderingContext.prototype.vertexAttrib2f,'WebGLRenderingContext.prototype.vertexAttrib2f');
  native(WebGLRenderingContext.prototype.vertexAttrib2fv,'WebGLRenderingContext.prototype.vertexAttrib2fv');
  native(WebGLRenderingContext.prototype.vertexAttrib3f,'WebGLRenderingContext.prototype.vertexAttrib3f');
  native(WebGLRenderingContext.prototype.vertexAttrib3fv,'WebGLRenderingContext.prototype.vertexAttrib3fv');
  native(WebGLRenderingContext.prototype.vertexAttrib4f,'WebGLRenderingContext.prototype.vertexAttrib4f');
  native(WebGLRenderingContext.prototype.vertexAttrib4fv,'WebGLRenderingContext.prototype.vertexAttrib4fv');
  native(WebGLRenderingContext.prototype.vertexAttribPointer,'WebGLRenderingContext.prototype.vertexAttribPointer');
  native(WebGLRenderingContext.prototype.viewport,'WebGLRenderingContext.prototype.viewport');
  native(VTTCue.prototype.getCueAsHTML,'VTTCue.prototype.getCueAsHTML');
  native(URL.prototype.toString,'URL.prototype.toString');
  native(UIEvent.prototype.initUIEvent,'UIEvent.prototype.initUIEvent');
  native(TreeWalker.prototype.parentNode,'TreeWalker.prototype.parentNode');
  native(TreeWalker.prototype.firstChild,'TreeWalker.prototype.firstChild');
  native(TreeWalker.prototype.lastChild,'TreeWalker.prototype.lastChild');
  native(TreeWalker.prototype.previousSibling,'TreeWalker.prototype.previousSibling');
  native(TreeWalker.prototype.nextSibling,'TreeWalker.prototype.nextSibling');
  native(TreeWalker.prototype.previousNode,'TreeWalker.prototype.previousNode');
  native(TreeWalker.prototype.nextNode,'TreeWalker.prototype.nextNode');
  native(TouchList.prototype.item,'TouchList.prototype.item');
  native(TouchEvent.prototype.initTouchEvent,'TouchEvent.prototype.initTouchEvent');
  native(TextTrackList.prototype.item,'TextTrackList.prototype.item');
  native(TextTrackList.prototype.getTrackById,'TextTrackList.prototype.getTrackById');
  native(TextTrackCueList.prototype.item,'TextTrackCueList.prototype.item');
  native(TextTrackCueList.prototype.getCueById,'TextTrackCueList.prototype.getCueById');
  native(TextTrack.prototype.addCue,'TextTrack.prototype.addCue');
  native(TextTrack.prototype.removeCue,'TextTrack.prototype.removeCue');
  native(TextEvent.prototype.initTextEvent,'TextEvent.prototype.initTextEvent');
  native(Text.prototype.splitText,'Text.prototype.splitText');
  native(Text.prototype.getDestinationInsertionPoints,'Text.prototype.getDestinationInsertionPoints');
  native(StyleSheetList.prototype.item,'StyleSheetList.prototype.item');
  native(StorageEvent.prototype.initStorageEvent,'StorageEvent.prototype.initStorageEvent');
  native(Storage.prototype.key,'Storage.prototype.key');
  native(Storage.prototype.getItem,'Storage.prototype.getItem');
  native(Storage.prototype.setItem,'Storage.prototype.setItem');
  native(Storage.prototype.removeItem,'Storage.prototype.removeItem');
  native(Storage.prototype.clear,'Storage.prototype.clear');
  native(ShadowRoot.prototype.cloneNode,'ShadowRoot.prototype.cloneNode');
  native(ShadowRoot.prototype.getSelection,'ShadowRoot.prototype.getSelection');
//  native(ShadowRoot.prototype.getElementsByClassName,'ShadowRoot.prototype.getElementsByClassName');
//  native(ShadowRoot.prototype.getElementsByTagName,'ShadowRoot.prototype.getElementsByTagName');
//  native(ShadowRoot.prototype.getElementsByTagNameNS,'ShadowRoot.prototype.getElementsByTagNameNS');
  native(ShadowRoot.prototype.elementFromPoint,'ShadowRoot.prototype.elementFromPoint');
  native(Selection.prototype.collapse,'Selection.prototype.collapse');
  native(Selection.prototype.collapseToStart,'Selection.prototype.collapseToStart');
  native(Selection.prototype.collapseToEnd,'Selection.prototype.collapseToEnd');
  native(Selection.prototype.extend,'Selection.prototype.extend');
  native(Selection.prototype.selectAllChildren,'Selection.prototype.selectAllChildren');
  native(Selection.prototype.deleteFromDocument,'Selection.prototype.deleteFromDocument');
  native(Selection.prototype.getRangeAt,'Selection.prototype.getRangeAt');
  native(Selection.prototype.addRange,'Selection.prototype.addRange');
  native(Selection.prototype.removeAllRanges,'Selection.prototype.removeAllRanges');
  native(Selection.prototype.containsNode,'Selection.prototype.containsNode');
  native(Selection.prototype.modify,'Selection.prototype.modify');
  native(Selection.prototype.setBaseAndExtent,'Selection.prototype.setBaseAndExtent');
  native(Selection.prototype.setPosition,'Selection.prototype.setPosition');
  native(Selection.prototype.empty,'Selection.prototype.empty');
  native(Selection.prototype.toString,'Selection.prototype.toString');
  native(SVGTextContentElement.prototype.getNumberOfChars,'SVGTextContentElement.prototype.getNumberOfChars');
  native(SVGTextContentElement.prototype.getComputedTextLength,'SVGTextContentElement.prototype.getComputedTextLength');
  native(SVGTextContentElement.prototype.getSubStringLength,'SVGTextContentElement.prototype.getSubStringLength');
  native(SVGTextContentElement.prototype.getStartPositionOfChar,'SVGTextContentElement.prototype.getStartPositionOfChar');
  native(SVGTextContentElement.prototype.getEndPositionOfChar,'SVGTextContentElement.prototype.getEndPositionOfChar');
  native(SVGTextContentElement.prototype.getExtentOfChar,'SVGTextContentElement.prototype.getExtentOfChar');
  native(SVGTextContentElement.prototype.getRotationOfChar,'SVGTextContentElement.prototype.getRotationOfChar');
  native(SVGTextContentElement.prototype.getCharNumAtPosition,'SVGTextContentElement.prototype.getCharNumAtPosition');
  native(SVGTextContentElement.prototype.selectSubString,'SVGTextContentElement.prototype.selectSubString');
  native(SVGSVGElement.prototype.pauseAnimations,'SVGSVGElement.prototype.pauseAnimations');
  native(SVGSVGElement.prototype.unpauseAnimations,'SVGSVGElement.prototype.unpauseAnimations');
  native(SVGSVGElement.prototype.animationsPaused,'SVGSVGElement.prototype.animationsPaused');
  native(SVGSVGElement.prototype.getCurrentTime,'SVGSVGElement.prototype.getCurrentTime');
  native(SVGSVGElement.prototype.setCurrentTime,'SVGSVGElement.prototype.setCurrentTime');
  native(SVGSVGElement.prototype.getIntersectionList,'SVGSVGElement.prototype.getIntersectionList');
  native(SVGSVGElement.prototype.getEnclosureList,'SVGSVGElement.prototype.getEnclosureList');
  native(SVGSVGElement.prototype.checkIntersection,'SVGSVGElement.prototype.checkIntersection');
  native(SVGSVGElement.prototype.checkEnclosure,'SVGSVGElement.prototype.checkEnclosure');
  native(SVGSVGElement.prototype.deselectAll,'SVGSVGElement.prototype.deselectAll');
  native(SVGSVGElement.prototype.getElementById,'SVGSVGElement.prototype.getElementById');
  native(SVGSVGElement.prototype.suspendRedraw,'SVGSVGElement.prototype.suspendRedraw');
  native(SVGSVGElement.prototype.unsuspendRedraw,'SVGSVGElement.prototype.unsuspendRedraw');
  native(SVGSVGElement.prototype.unsuspendRedrawAll,'SVGSVGElement.prototype.unsuspendRedrawAll');
  native(SVGSVGElement.prototype.forceRedraw,'SVGSVGElement.prototype.forceRedraw');
  native(SVGSVGElement.prototype.createSVGNumber,'SVGSVGElement.prototype.createSVGNumber');
  native(SVGSVGElement.prototype.createSVGLength,'SVGSVGElement.prototype.createSVGLength');
  native(SVGSVGElement.prototype.createSVGAngle,'SVGSVGElement.prototype.createSVGAngle');
  native(SVGSVGElement.prototype.createSVGPoint,'SVGSVGElement.prototype.createSVGPoint');
  native(SVGSVGElement.prototype.createSVGMatrix,'SVGSVGElement.prototype.createSVGMatrix');
  native(SVGSVGElement.prototype.createSVGRect,'SVGSVGElement.prototype.createSVGRect');
  native(SVGSVGElement.prototype.createSVGTransform,'SVGSVGElement.prototype.createSVGTransform');
  native(SVGSVGElement.prototype.createSVGTransformFromMatrix,'SVGSVGElement.prototype.createSVGTransformFromMatrix');
  native(SVGPoint.prototype.matrixTransform,'SVGPoint.prototype.matrixTransform');
  native(SVGPatternElement.prototype.hasExtension,'SVGPatternElement.prototype.hasExtension');
  native(SVGPathElement.prototype.getTotalLength,'SVGPathElement.prototype.getTotalLength');
  native(SVGPathElement.prototype.getPointAtLength,'SVGPathElement.prototype.getPointAtLength');
  native(SVGPathElement.prototype.getPathSegAtLength,'SVGPathElement.prototype.getPathSegAtLength');
  native(SVGPathElement.prototype.createSVGPathSegClosePath,'SVGPathElement.prototype.createSVGPathSegClosePath');
  native(SVGPathElement.prototype.createSVGPathSegMovetoAbs,'SVGPathElement.prototype.createSVGPathSegMovetoAbs');
  native(SVGPathElement.prototype.createSVGPathSegMovetoRel,'SVGPathElement.prototype.createSVGPathSegMovetoRel');
  native(SVGPathElement.prototype.createSVGPathSegLinetoAbs,'SVGPathElement.prototype.createSVGPathSegLinetoAbs');
  native(SVGPathElement.prototype.createSVGPathSegLinetoRel,'SVGPathElement.prototype.createSVGPathSegLinetoRel');
  native(SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs,'SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs');
  native(SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel,'SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel');
  native(SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs,'SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs');
  native(SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel,'SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel');
  native(SVGPathElement.prototype.createSVGPathSegArcAbs,'SVGPathElement.prototype.createSVGPathSegArcAbs');
  native(SVGPathElement.prototype.createSVGPathSegArcRel,'SVGPathElement.prototype.createSVGPathSegArcRel');
  native(SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs,'SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs');
  native(SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel,'SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel');
  native(SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs,'SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs');
  native(SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel,'SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel');
  native(SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs,'SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs');
  native(SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel,'SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel');
  native(SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs,'SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs');
  native(SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel,'SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel');
  native(SVGMatrix.prototype.multiply,'SVGMatrix.prototype.multiply');
  native(SVGMatrix.prototype.inverse,'SVGMatrix.prototype.inverse');
  native(SVGMatrix.prototype.translate,'SVGMatrix.prototype.translate');
  native(SVGMatrix.prototype.scale,'SVGMatrix.prototype.scale');
  native(SVGMatrix.prototype.scaleNonUniform,'SVGMatrix.prototype.scaleNonUniform');
  native(SVGMatrix.prototype.rotate,'SVGMatrix.prototype.rotate');
  native(SVGMatrix.prototype.rotateFromVector,'SVGMatrix.prototype.rotateFromVector');
  native(SVGMatrix.prototype.flipX,'SVGMatrix.prototype.flipX');
  native(SVGMatrix.prototype.flipY,'SVGMatrix.prototype.flipY');
  native(SVGMatrix.prototype.skewX,'SVGMatrix.prototype.skewX');
  native(SVGMatrix.prototype.skewY,'SVGMatrix.prototype.skewY');
  native(SVGMaskElement.prototype.hasExtension,'SVGMaskElement.prototype.hasExtension');
  native(SVGMarkerElement.prototype.setOrientToAuto,'SVGMarkerElement.prototype.setOrientToAuto');
  native(SVGMarkerElement.prototype.setOrientToAngle,'SVGMarkerElement.prototype.setOrientToAngle');
  native(SVGGraphicsElement.prototype.getBBox,'SVGGraphicsElement.prototype.getBBox');
  native(SVGGraphicsElement.prototype.getCTM,'SVGGraphicsElement.prototype.getCTM');
  native(SVGGraphicsElement.prototype.getScreenCTM,'SVGGraphicsElement.prototype.getScreenCTM');
  native(SVGGraphicsElement.prototype.getTransformToElement,'SVGGraphicsElement.prototype.getTransformToElement');
  native(SVGGraphicsElement.prototype.hasExtension,'SVGGraphicsElement.prototype.hasExtension');
  native(SVGGeometryElement.prototype.isPointInFill,'SVGGeometryElement.prototype.isPointInFill');
  native(SVGGeometryElement.prototype.isPointInStroke,'SVGGeometryElement.prototype.isPointInStroke');
  native(SVGFilterElement.prototype.setFilterRes,'SVGFilterElement.prototype.setFilterRes');
  native(SVGFEGaussianBlurElement.prototype.setStdDeviation,'SVGFEGaussianBlurElement.prototype.setStdDeviation');
  native(SVGFEDropShadowElement.prototype.setStdDeviation,'SVGFEDropShadowElement.prototype.setStdDeviation');
  native(SVGCursorElement.prototype.hasExtension,'SVGCursorElement.prototype.hasExtension');
  native(SVGAnimationElement.prototype.getStartTime,'SVGAnimationElement.prototype.getStartTime');
  native(SVGAnimationElement.prototype.getCurrentTime,'SVGAnimationElement.prototype.getCurrentTime');
  native(SVGAnimationElement.prototype.getSimpleDuration,'SVGAnimationElement.prototype.getSimpleDuration');
  native(SVGAnimationElement.prototype.beginElement,'SVGAnimationElement.prototype.beginElement');
  native(SVGAnimationElement.prototype.beginElementAt,'SVGAnimationElement.prototype.beginElementAt');
  native(SVGAnimationElement.prototype.endElement,'SVGAnimationElement.prototype.endElement');
  native(SVGAnimationElement.prototype.endElementAt,'SVGAnimationElement.prototype.endElementAt');
  native(SVGAnimationElement.prototype.hasExtension,'SVGAnimationElement.prototype.hasExtension');
  native(SVGAngle.prototype.newValueSpecifiedUnits,'SVGAngle.prototype.newValueSpecifiedUnits');
  native(SVGAngle.prototype.convertToSpecifiedUnits,'SVGAngle.prototype.convertToSpecifiedUnits');
  native(Range.prototype.setStart,'Range.prototype.setStart');
  native(Range.prototype.setEnd,'Range.prototype.setEnd');
  native(Range.prototype.setStartBefore,'Range.prototype.setStartBefore');
  native(Range.prototype.setStartAfter,'Range.prototype.setStartAfter');
  native(Range.prototype.setEndBefore,'Range.prototype.setEndBefore');
  native(Range.prototype.setEndAfter,'Range.prototype.setEndAfter');
  native(Range.prototype.collapse,'Range.prototype.collapse');
  native(Range.prototype.selectNode,'Range.prototype.selectNode');
  native(Range.prototype.selectNodeContents,'Range.prototype.selectNodeContents');
  native(Range.prototype.compareBoundaryPoints,'Range.prototype.compareBoundaryPoints');
  native(Range.prototype.deleteContents,'Range.prototype.deleteContents');
  native(Range.prototype.extractContents,'Range.prototype.extractContents');
  native(Range.prototype.cloneContents,'Range.prototype.cloneContents');
  native(Range.prototype.insertNode,'Range.prototype.insertNode');
  native(Range.prototype.surroundContents,'Range.prototype.surroundContents');
  native(Range.prototype.cloneRange,'Range.prototype.cloneRange');
  native(Range.prototype.detach,'Range.prototype.detach');
  native(Range.prototype.isPointInRange,'Range.prototype.isPointInRange');
  native(Range.prototype.comparePoint,'Range.prototype.comparePoint');
  native(Range.prototype.intersectsNode,'Range.prototype.intersectsNode');
  native(Range.prototype.getClientRects,'Range.prototype.getClientRects');
  native(Range.prototype.getBoundingClientRect,'Range.prototype.getBoundingClientRect');
  native(Range.prototype.createContextualFragment,'Range.prototype.createContextualFragment');
  native(Range.prototype.compareNode,'Range.prototype.compareNode');
  native(Range.prototype.expand,'Range.prototype.expand');
  native(Range.prototype.toString,'Range.prototype.toString');
  native(Plugin.prototype.item,'Plugin.prototype.item');
  native(Plugin.prototype.namedItem,'Plugin.prototype.namedItem');
  native(PluginArray.prototype.item,'PluginArray.prototype.item');
  native(PluginArray.prototype.namedItem,'PluginArray.prototype.namedItem');
  native(PluginArray.prototype.refresh,'PluginArray.prototype.refresh');
  native(Performance.prototype.getEntries,'Performance.prototype.getEntries');
  native(Performance.prototype.getEntriesByType,'Performance.prototype.getEntriesByType');
  native(Performance.prototype.getEntriesByName,'Performance.prototype.getEntriesByName');
  native(Performance.prototype.webkitClearResourceTimings,'Performance.prototype.webkitClearResourceTimings');
  native(Performance.prototype.webkitSetResourceTimingBufferSize,'Performance.prototype.webkitSetResourceTimingBufferSize');
  native(Performance.prototype.mark,'Performance.prototype.mark');
  native(Performance.prototype.clearMarks,'Performance.prototype.clearMarks');
  native(Performance.prototype.measure,'Performance.prototype.measure');
  native(Performance.prototype.clearMeasures,'Performance.prototype.clearMeasures');
  native(Performance.prototype.now,'Performance.prototype.now');
  native(Path2D.prototype.closePath,'Path2D.prototype.closePath');
  native(Path2D.prototype.moveTo,'Path2D.prototype.moveTo');
  native(Path2D.prototype.lineTo,'Path2D.prototype.lineTo');
  native(Path2D.prototype.quadraticCurveTo,'Path2D.prototype.quadraticCurveTo');
  native(Path2D.prototype.bezierCurveTo,'Path2D.prototype.bezierCurveTo');
  native(Path2D.prototype.arcTo,'Path2D.prototype.arcTo');
  native(Path2D.prototype.rect,'Path2D.prototype.rect');
  native(Path2D.prototype.arc,'Path2D.prototype.arc');
  native(Path2D.prototype.ellipse,'Path2D.prototype.ellipse');
  native(NodeList.prototype.item,'NodeList.prototype.item');
  native(NodeIterator.prototype.nextNode,'NodeIterator.prototype.nextNode');
  native(NodeIterator.prototype.previousNode,'NodeIterator.prototype.previousNode');
  native(NodeIterator.prototype.detach,'NodeIterator.prototype.detach');
  native(NodeFilter.prototype.acceptNode,'NodeFilter.prototype.acceptNode');
  native(Node.prototype.insertBefore,'Node.prototype.insertBefore');
  native(Node.prototype.replaceChild,'Node.prototype.replaceChild');
  native(Node.prototype.removeChild,'Node.prototype.removeChild');
  native(Node.prototype.appendChild,'Node.prototype.appendChild');
  native(Node.prototype.hasChildNodes,'Node.prototype.hasChildNodes');
  native(Node.prototype.cloneNode,'Node.prototype.cloneNode');
  native(Node.prototype.normalize,'Node.prototype.normalize');
  native(Node.prototype.isSameNode,'Node.prototype.isSameNode');
  native(Node.prototype.isEqualNode,'Node.prototype.isEqualNode');
  native(Node.prototype.lookupPrefix,'Node.prototype.lookupPrefix');
  native(Node.prototype.isDefaultNamespace,'Node.prototype.isDefaultNamespace');
  native(Node.prototype.lookupNamespaceURI,'Node.prototype.lookupNamespaceURI');
  native(Node.prototype.compareDocumentPosition,'Node.prototype.compareDocumentPosition');
  native(Node.prototype.contains,'Node.prototype.contains');
  native(Navigator.prototype.javaEnabled,'Navigator.prototype.javaEnabled');
  native(Navigator.prototype.getStorageUpdates,'Navigator.prototype.getStorageUpdates');
  native(Navigator.prototype.getGamepads,'Navigator.prototype.getGamepads');
  native(Navigator.prototype.webkitGetUserMedia,'Navigator.prototype.webkitGetUserMedia');
  native(Navigator.prototype.vibrate,'Navigator.prototype.vibrate');
  native(Navigator.prototype.getBattery,'Navigator.prototype.getBattery');
  native(Navigator.prototype.sendBeacon,'Navigator.prototype.sendBeacon');
  native(Navigator.prototype.registerProtocolHandler,'Navigator.prototype.registerProtocolHandler');
  native(Navigator.prototype.unregisterProtocolHandler,'Navigator.prototype.unregisterProtocolHandler');
  native(NamedNodeMap.prototype.getNamedItem,'NamedNodeMap.prototype.getNamedItem');
  native(NamedNodeMap.prototype.setNamedItem,'NamedNodeMap.prototype.setNamedItem');
  native(NamedNodeMap.prototype.removeNamedItem,'NamedNodeMap.prototype.removeNamedItem');
  native(NamedNodeMap.prototype.item,'NamedNodeMap.prototype.item');
  native(NamedNodeMap.prototype.getNamedItemNS,'NamedNodeMap.prototype.getNamedItemNS');
  native(NamedNodeMap.prototype.setNamedItemNS,'NamedNodeMap.prototype.setNamedItemNS');
  native(NamedNodeMap.prototype.removeNamedItemNS,'NamedNodeMap.prototype.removeNamedItemNS');
  native(MutationObserver.prototype.observe,'MutationObserver.prototype.observe');
  native(MutationObserver.prototype.takeRecords,'MutationObserver.prototype.takeRecords');
  native(MutationObserver.prototype.disconnect,'MutationObserver.prototype.disconnect');
  native(MutationEvent.prototype.initMutationEvent,'MutationEvent.prototype.initMutationEvent');
  native(MouseEvent.prototype.initMouseEvent,'MouseEvent.prototype.initMouseEvent');
  native(MimeTypeArray.prototype.item,'MimeTypeArray.prototype.item');
  native(MimeTypeArray.prototype.namedItem,'MimeTypeArray.prototype.namedItem');
  native(MessagePort.prototype.postMessage,'MessagePort.prototype.postMessage');
  native(MessagePort.prototype.start,'MessagePort.prototype.start');
  native(MessagePort.prototype.close,'MessagePort.prototype.close');
  native(MessageEvent.prototype.initMessageEvent,'MessageEvent.prototype.initMessageEvent');
  native(MediaQueryList.prototype.addListener,'MediaQueryList.prototype.addListener');
  native(MediaQueryList.prototype.removeListener,'MediaQueryList.prototype.removeListener');
  native(MediaList.prototype.item,'MediaList.prototype.item');
  native(MediaList.prototype.deleteMedium,'MediaList.prototype.deleteMedium');
  native(MediaList.prototype.appendMedium,'MediaList.prototype.appendMedium');
  native(KeyboardEvent.prototype.getModifierState,'KeyboardEvent.prototype.getModifierState');
  native(KeyboardEvent.prototype.initKeyboardEvent,'KeyboardEvent.prototype.initKeyboardEvent');
  native(InputMethodContext.prototype.confirmComposition,'InputMethodContext.prototype.confirmComposition');
  native(History.prototype.back,'History.prototype.back');
  native(History.prototype.forward,'History.prototype.forward');
  native(History.prototype.go,'History.prototype.go');
  native(History.prototype.pushState,'History.prototype.pushState');
  native(History.prototype.replaceState,'History.prototype.replaceState');
  native(HashChangeEvent.prototype.initHashChangeEvent,'HashChangeEvent.prototype.initHashChangeEvent');
  native(HTMLTextAreaElement.prototype.checkValidity,'HTMLTextAreaElement.prototype.checkValidity');
  native(HTMLTextAreaElement.prototype.reportValidity,'HTMLTextAreaElement.prototype.reportValidity');
  native(HTMLTextAreaElement.prototype.setCustomValidity,'HTMLTextAreaElement.prototype.setCustomValidity');
  native(HTMLTextAreaElement.prototype.select,'HTMLTextAreaElement.prototype.select');
  native(HTMLTextAreaElement.prototype.setRangeText,'HTMLTextAreaElement.prototype.setRangeText');
  native(HTMLTextAreaElement.prototype.setSelectionRange,'HTMLTextAreaElement.prototype.setSelectionRange');
  native(HTMLTableSectionElement.prototype.insertRow,'HTMLTableSectionElement.prototype.insertRow');
  native(HTMLTableSectionElement.prototype.deleteRow,'HTMLTableSectionElement.prototype.deleteRow');
  native(HTMLTableRowElement.prototype.insertCell,'HTMLTableRowElement.prototype.insertCell');
  native(HTMLTableRowElement.prototype.deleteCell,'HTMLTableRowElement.prototype.deleteCell');
  native(HTMLTableElement.prototype.createTHead,'HTMLTableElement.prototype.createTHead');
  native(HTMLTableElement.prototype.deleteTHead,'HTMLTableElement.prototype.deleteTHead');
  native(HTMLTableElement.prototype.createTFoot,'HTMLTableElement.prototype.createTFoot');
  native(HTMLTableElement.prototype.deleteTFoot,'HTMLTableElement.prototype.deleteTFoot');
  native(HTMLTableElement.prototype.createTBody,'HTMLTableElement.prototype.createTBody');
  native(HTMLTableElement.prototype.createCaption,'HTMLTableElement.prototype.createCaption');
  native(HTMLTableElement.prototype.deleteCaption,'HTMLTableElement.prototype.deleteCaption');
  native(HTMLTableElement.prototype.insertRow,'HTMLTableElement.prototype.insertRow');
  native(HTMLTableElement.prototype.deleteRow,'HTMLTableElement.prototype.deleteRow');
  native(HTMLShadowElement.prototype.getDistributedNodes,'HTMLShadowElement.prototype.getDistributedNodes');
  native(HTMLSelectElement.prototype.item,'HTMLSelectElement.prototype.item');
  native(HTMLSelectElement.prototype.namedItem,'HTMLSelectElement.prototype.namedItem');
  native(HTMLSelectElement.prototype.add,'HTMLSelectElement.prototype.add');
  native(HTMLSelectElement.prototype.remove,'HTMLSelectElement.prototype.remove');
  native(HTMLSelectElement.prototype.checkValidity,'HTMLSelectElement.prototype.checkValidity');
  native(HTMLSelectElement.prototype.reportValidity,'HTMLSelectElement.prototype.reportValidity');
  native(HTMLSelectElement.prototype.setCustomValidity,'HTMLSelectElement.prototype.setCustomValidity');
  native(HTMLOutputElement.prototype.checkValidity,'HTMLOutputElement.prototype.checkValidity');
  native(HTMLOutputElement.prototype.reportValidity,'HTMLOutputElement.prototype.reportValidity');
  native(HTMLOutputElement.prototype.setCustomValidity,'HTMLOutputElement.prototype.setCustomValidity');
  native(HTMLOptionsCollection.prototype.namedItem,'HTMLOptionsCollection.prototype.namedItem');
  native(HTMLOptionsCollection.prototype.add,'HTMLOptionsCollection.prototype.add');
  native(HTMLOptionsCollection.prototype.remove,'HTMLOptionsCollection.prototype.remove');
  native(HTMLObjectElement.prototype.checkValidity,'HTMLObjectElement.prototype.checkValidity');
  native(HTMLObjectElement.prototype.reportValidity,'HTMLObjectElement.prototype.reportValidity');
  native(HTMLObjectElement.prototype.setCustomValidity,'HTMLObjectElement.prototype.setCustomValidity');
  native(HTMLObjectElement.prototype.getSVGDocument,'HTMLObjectElement.prototype.getSVGDocument');
  native(HTMLMarqueeElement.prototype.start,'HTMLMarqueeElement.prototype.start');
  native(HTMLMarqueeElement.prototype.stop,'HTMLMarqueeElement.prototype.stop');
  native(HTMLKeygenElement.prototype.checkValidity,'HTMLKeygenElement.prototype.checkValidity');
  native(HTMLKeygenElement.prototype.reportValidity,'HTMLKeygenElement.prototype.reportValidity');
  native(HTMLKeygenElement.prototype.setCustomValidity,'HTMLKeygenElement.prototype.setCustomValidity');
  native(HTMLInputElement.prototype.stepUp,'HTMLInputElement.prototype.stepUp');
  native(HTMLInputElement.prototype.stepDown,'HTMLInputElement.prototype.stepDown');
  native(HTMLInputElement.prototype.checkValidity,'HTMLInputElement.prototype.checkValidity');
  native(HTMLInputElement.prototype.reportValidity,'HTMLInputElement.prototype.reportValidity');
  native(HTMLInputElement.prototype.setCustomValidity,'HTMLInputElement.prototype.setCustomValidity');
  native(HTMLInputElement.prototype.select,'HTMLInputElement.prototype.select');
  native(HTMLInputElement.prototype.setRangeText,'HTMLInputElement.prototype.setRangeText');
  native(HTMLInputElement.prototype.setSelectionRange,'HTMLInputElement.prototype.setSelectionRange');
  native(HTMLIFrameElement.prototype.getSVGDocument,'HTMLIFrameElement.prototype.getSVGDocument');
  native(HTMLFrameElement.prototype.getSVGDocument,'HTMLFrameElement.prototype.getSVGDocument');
  native(HTMLFormElement.prototype.submit,'HTMLFormElement.prototype.submit');
  native(HTMLFormElement.prototype.reset,'HTMLFormElement.prototype.reset');
  native(HTMLFormElement.prototype.checkValidity,'HTMLFormElement.prototype.checkValidity');
  native(HTMLFormElement.prototype.reportValidity,'HTMLFormElement.prototype.reportValidity');
  native(HTMLFormElement.prototype.requestAutocomplete,'HTMLFormElement.prototype.requestAutocomplete');
  native(HTMLFormControlsCollection.prototype.namedItem,'HTMLFormControlsCollection.prototype.namedItem');
  native(HTMLFieldSetElement.prototype.checkValidity,'HTMLFieldSetElement.prototype.checkValidity');
  native(HTMLFieldSetElement.prototype.reportValidity,'HTMLFieldSetElement.prototype.reportValidity');
  native(HTMLFieldSetElement.prototype.setCustomValidity,'HTMLFieldSetElement.prototype.setCustomValidity');
  native(HTMLEmbedElement.prototype.getSVGDocument,'HTMLEmbedElement.prototype.getSVGDocument');
  native(HTMLElement.prototype.click,'HTMLElement.prototype.click');
  native(HTMLDocument.prototype.open,'HTMLDocument.prototype.open');
  native(HTMLDocument.prototype.close,'HTMLDocument.prototype.close');
  native(HTMLDocument.prototype.write,'HTMLDocument.prototype.write');
  native(HTMLDocument.prototype.writeln,'HTMLDocument.prototype.writeln');
  native(HTMLDocument.prototype.clear,'HTMLDocument.prototype.clear');
  native(HTMLDocument.prototype.captureEvents,'HTMLDocument.prototype.captureEvents');
  native(HTMLDocument.prototype.releaseEvents,'HTMLDocument.prototype.releaseEvents');
  native(HTMLDialogElement.prototype.close,'HTMLDialogElement.prototype.close');
  native(HTMLDialogElement.prototype.show,'HTMLDialogElement.prototype.show');
  native(HTMLDialogElement.prototype.showModal,'HTMLDialogElement.prototype.showModal');
  native(HTMLContentElement.prototype.getDistributedNodes,'HTMLContentElement.prototype.getDistributedNodes');
  native(HTMLCollection.prototype.item,'HTMLCollection.prototype.item');
  native(HTMLCollection.prototype.namedItem,'HTMLCollection.prototype.namedItem');
  native(HTMLCanvasElement.prototype.toDataURL,'HTMLCanvasElement.prototype.toDataURL');
  native(HTMLCanvasElement.prototype.getContext,'HTMLCanvasElement.prototype.getContext');
  native(HTMLButtonElement.prototype.checkValidity,'HTMLButtonElement.prototype.checkValidity');
  native(HTMLButtonElement.prototype.reportValidity,'HTMLButtonElement.prototype.reportValidity');
  native(HTMLButtonElement.prototype.setCustomValidity,'HTMLButtonElement.prototype.setCustomValidity');
  native(HTMLAreaElement.prototype.toString,'HTMLAreaElement.prototype.toString');
  native(HTMLAnchorElement.prototype.toString,'HTMLAnchorElement.prototype.toString');
  native(HTMLAllCollection.prototype.item,'HTMLAllCollection.prototype.item');
  native(HTMLAllCollection.prototype.namedItem,'HTMLAllCollection.prototype.namedItem');
  native(FormData.prototype.append,'FormData.prototype.append');
  native(FontFace.prototype.load,'FontFace.prototype.load');
  native(FileReader.prototype.readAsArrayBuffer,'FileReader.prototype.readAsArrayBuffer');
  native(FileReader.prototype.readAsBinaryString,'FileReader.prototype.readAsBinaryString');
  native(FileReader.prototype.readAsText,'FileReader.prototype.readAsText');
  native(FileReader.prototype.readAsDataURL,'FileReader.prototype.readAsDataURL');
  native(FileReader.prototype.abort,'FileReader.prototype.abort');
  native(FileList.prototype.item,'FileList.prototype.item');
  native(EventTarget.prototype.dispatchEvent,'EventTarget.prototype.dispatchEvent');
  native(EventSource.prototype.close,'EventSource.prototype.close');
  native(Event.prototype.stopPropagation,'Event.prototype.stopPropagation');
  native(Event.prototype.preventDefault,'Event.prototype.preventDefault');
  native(Event.prototype.initEvent,'Event.prototype.initEvent');
  native(Event.prototype.stopImmediatePropagation,'Event.prototype.stopImmediatePropagation');
  native(Element.prototype.getAttribute,'Element.prototype.getAttribute');
  native(Element.prototype.setAttribute,'Element.prototype.setAttribute');
  native(Element.prototype.removeAttribute,'Element.prototype.removeAttribute');
  native(Element.prototype.getAttributeNode,'Element.prototype.getAttributeNode');
  native(Element.prototype.setAttributeNode,'Element.prototype.setAttributeNode');
  native(Element.prototype.removeAttributeNode,'Element.prototype.removeAttributeNode');
  native(Element.prototype.getElementsByTagName,'Element.prototype.getElementsByTagName');
  native(Element.prototype.hasAttributes,'Element.prototype.hasAttributes');
  native(Element.prototype.getAttributeNS,'Element.prototype.getAttributeNS');
  native(Element.prototype.setAttributeNS,'Element.prototype.setAttributeNS');
  native(Element.prototype.removeAttributeNS,'Element.prototype.removeAttributeNS');
  native(Element.prototype.getElementsByTagNameNS,'Element.prototype.getElementsByTagNameNS');
  native(Element.prototype.getAttributeNodeNS,'Element.prototype.getAttributeNodeNS');
  native(Element.prototype.setAttributeNodeNS,'Element.prototype.setAttributeNodeNS');
  native(Element.prototype.hasAttribute,'Element.prototype.hasAttribute');
  native(Element.prototype.hasAttributeNS,'Element.prototype.hasAttributeNS');
  native(Element.prototype.matches,'Element.prototype.matches');
  native(Element.prototype.closest,'Element.prototype.closest');
  native(Element.prototype.focus,'Element.prototype.focus');
  native(Element.prototype.blur,'Element.prototype.blur');
  native(Element.prototype.scrollIntoView,'Element.prototype.scrollIntoView');
  native(Element.prototype.scrollIntoViewIfNeeded,'Element.prototype.scrollIntoViewIfNeeded');
  native(Element.prototype.getElementsByClassName,'Element.prototype.getElementsByClassName');
  native(Element.prototype.insertAdjacentElement,'Element.prototype.insertAdjacentElement');
  native(Element.prototype.insertAdjacentText,'Element.prototype.insertAdjacentText');
  native(Element.prototype.insertAdjacentHTML,'Element.prototype.insertAdjacentHTML');
  native(Element.prototype.webkitMatchesSelector,'Element.prototype.webkitMatchesSelector');
  native(Element.prototype.createShadowRoot,'Element.prototype.createShadowRoot');
  native(Element.prototype.getDestinationInsertionPoints,'Element.prototype.getDestinationInsertionPoints');
  native(Element.prototype.getClientRects,'Element.prototype.getClientRects');
  native(Element.prototype.getBoundingClientRect,'Element.prototype.getBoundingClientRect');
  native(Element.prototype.requestPointerLock,'Element.prototype.requestPointerLock');
  native(Element.prototype.animate,'Element.prototype.animate');
  native(Element.prototype.remove,'Element.prototype.remove');
  native(Element.prototype.webkitRequestFullScreen,'Element.prototype.webkitRequestFullScreen');
  native(Element.prototype.webkitRequestFullscreen,'Element.prototype.webkitRequestFullscreen');
  native(Element.prototype.querySelector,'Element.prototype.querySelector');
  native(Element.prototype.querySelectorAll,'Element.prototype.querySelectorAll');
  native(DocumentType.prototype.remove,'DocumentType.prototype.remove');
  native(DocumentFragment.prototype.getElementById,'DocumentFragment.prototype.getElementById');
  native(DocumentFragment.prototype.querySelector,'DocumentFragment.prototype.querySelector');
  native(DocumentFragment.prototype.querySelectorAll,'DocumentFragment.prototype.querySelectorAll');
  native(Document.prototype.createDocumentFragment,'Document.prototype.createDocumentFragment');
  native(Document.prototype.createTextNode,'Document.prototype.createTextNode');
  native(Document.prototype.createComment,'Document.prototype.createComment');
  native(Document.prototype.createCDATASection,'Document.prototype.createCDATASection');
  native(Document.prototype.createProcessingInstruction,'Document.prototype.createProcessingInstruction');
  native(Document.prototype.createAttribute,'Document.prototype.createAttribute');
  native(Document.prototype.getElementsByTagName,'Document.prototype.getElementsByTagName');
  native(Document.prototype.importNode,'Document.prototype.importNode');
  native(Document.prototype.createAttributeNS,'Document.prototype.createAttributeNS');
  native(Document.prototype.getElementsByTagNameNS,'Document.prototype.getElementsByTagNameNS');
  native(Document.prototype.getElementById,'Document.prototype.getElementById');
  native(Document.prototype.adoptNode,'Document.prototype.adoptNode');
  native(Document.prototype.createEvent,'Document.prototype.createEvent');
  native(Document.prototype.createRange,'Document.prototype.createRange');
  native(Document.prototype.createNodeIterator,'Document.prototype.createNodeIterator');
  native(Document.prototype.createTreeWalker,'Document.prototype.createTreeWalker');
//  native(Document.prototype.getOverrideStyle,'Document.prototype.getOverrideStyle');
  native(Document.prototype.execCommand,'Document.prototype.execCommand');
  native(Document.prototype.queryCommandEnabled,'Document.prototype.queryCommandEnabled');
  native(Document.prototype.queryCommandIndeterm,'Document.prototype.queryCommandIndeterm');
  native(Document.prototype.queryCommandState,'Document.prototype.queryCommandState');
  native(Document.prototype.queryCommandSupported,'Document.prototype.queryCommandSupported');
  native(Document.prototype.queryCommandValue,'Document.prototype.queryCommandValue');
  native(Document.prototype.getElementsByName,'Document.prototype.getElementsByName');
  native(Document.prototype.elementFromPoint,'Document.prototype.elementFromPoint');
  native(Document.prototype.caretRangeFromPoint,'Document.prototype.caretRangeFromPoint');
  native(Document.prototype.getSelection,'Document.prototype.getSelection');
  native(Document.prototype.getCSSCanvasContext,'Document.prototype.getCSSCanvasContext');
  native(Document.prototype.getElementsByClassName,'Document.prototype.getElementsByClassName');
  native(Document.prototype.hasFocus,'Document.prototype.hasFocus');
  native(Document.prototype.exitPointerLock,'Document.prototype.exitPointerLock');
  native(Document.prototype.registerElement,'Document.prototype.registerElement');
  native(Document.prototype.createElement,'Document.prototype.createElement');
  native(Document.prototype.createElementNS,'Document.prototype.createElementNS');
  native(Document.prototype.webkitCancelFullScreen,'Document.prototype.webkitCancelFullScreen');
  native(Document.prototype.webkitExitFullscreen,'Document.prototype.webkitExitFullscreen');
  native(Document.prototype.querySelector,'Document.prototype.querySelector');
  native(Document.prototype.querySelectorAll,'Document.prototype.querySelectorAll');
  native(Document.prototype.createExpression,'Document.prototype.createExpression');
  native(Document.prototype.createNSResolver,'Document.prototype.createNSResolver');
  native(Document.prototype.evaluate,'Document.prototype.evaluate');
  native(DataTransferItemList.prototype.add,'DataTransferItemList.prototype.add');
  native(DataTransferItemList.prototype.remove,'DataTransferItemList.prototype.remove');
  native(DataTransferItemList.prototype.clear,'DataTransferItemList.prototype.clear');
  native(DataTransfer.prototype.clearData,'DataTransfer.prototype.clearData');
  native(DataTransfer.prototype.getData,'DataTransfer.prototype.getData');
  native(DataTransfer.prototype.setData,'DataTransfer.prototype.setData');
  native(DataTransfer.prototype.setDragImage,'DataTransfer.prototype.setDragImage');
  native(DOMTokenList.prototype.item,'DOMTokenList.prototype.item');
  native(DOMTokenList.prototype.contains,'DOMTokenList.prototype.contains');
  native(DOMTokenList.prototype.add,'DOMTokenList.prototype.add');
  native(DOMTokenList.prototype.remove,'DOMTokenList.prototype.remove');
  native(DOMTokenList.prototype.toggle,'DOMTokenList.prototype.toggle');
  native(DOMTokenList.prototype.toString,'DOMTokenList.prototype.toString');
  native(DOMStringList.prototype.item,'DOMStringList.prototype.item');
  native(DOMStringList.prototype.contains,'DOMStringList.prototype.contains');
  native(DOMParser.prototype.parseFromString,'DOMParser.prototype.parseFromString');
  native(DOMImplementation.prototype.hasFeature,'DOMImplementation.prototype.hasFeature');
  native(DOMImplementation.prototype.createDocumentType,'DOMImplementation.prototype.createDocumentType');
  native(DOMImplementation.prototype.createDocument,'DOMImplementation.prototype.createDocument');
  native(DOMImplementation.prototype.createHTMLDocument,'DOMImplementation.prototype.createHTMLDocument');
  native(DOMException.prototype.toString,'DOMException.prototype.toString');
  native(CustomEvent.prototype.initCustomEvent,'CustomEvent.prototype.initCustomEvent');
  native(CompositionEvent.prototype.initCompositionEvent,'CompositionEvent.prototype.initCompositionEvent');
  native(ClientRectList.prototype.item,'ClientRectList.prototype.item');
  native(CharacterData.prototype.substringData,'CharacterData.prototype.substringData');
  native(CharacterData.prototype.appendData,'CharacterData.prototype.appendData');
  native(CharacterData.prototype.insertData,'CharacterData.prototype.insertData');
  native(CharacterData.prototype.deleteData,'CharacterData.prototype.deleteData');
  native(CharacterData.prototype.replaceData,'CharacterData.prototype.replaceData');
  native(CharacterData.prototype.remove,'CharacterData.prototype.remove');
  native(CanvasRenderingContext2D.prototype.save,'CanvasRenderingContext2D.prototype.save');
  native(CanvasRenderingContext2D.prototype.restore,'CanvasRenderingContext2D.prototype.restore');
  native(CanvasRenderingContext2D.prototype.scale,'CanvasRenderingContext2D.prototype.scale');
  native(CanvasRenderingContext2D.prototype.rotate,'CanvasRenderingContext2D.prototype.rotate');
  native(CanvasRenderingContext2D.prototype.translate,'CanvasRenderingContext2D.prototype.translate');
  native(CanvasRenderingContext2D.prototype.transform,'CanvasRenderingContext2D.prototype.transform');
  native(CanvasRenderingContext2D.prototype.setTransform,'CanvasRenderingContext2D.prototype.setTransform');
  native(CanvasRenderingContext2D.prototype.resetTransform,'CanvasRenderingContext2D.prototype.resetTransform');
  native(CanvasRenderingContext2D.prototype.createLinearGradient,'CanvasRenderingContext2D.prototype.createLinearGradient');
  native(CanvasRenderingContext2D.prototype.createRadialGradient,'CanvasRenderingContext2D.prototype.createRadialGradient');
  native(CanvasRenderingContext2D.prototype.createPattern,'CanvasRenderingContext2D.prototype.createPattern');
  native(CanvasRenderingContext2D.prototype.clearRect,'CanvasRenderingContext2D.prototype.clearRect');
  native(CanvasRenderingContext2D.prototype.fillRect,'CanvasRenderingContext2D.prototype.fillRect');
  native(CanvasRenderingContext2D.prototype.strokeRect,'CanvasRenderingContext2D.prototype.strokeRect');
  native(CanvasRenderingContext2D.prototype.beginPath,'CanvasRenderingContext2D.prototype.beginPath');
  native(CanvasRenderingContext2D.prototype.fill,'CanvasRenderingContext2D.prototype.fill');
  native(CanvasRenderingContext2D.prototype.stroke,'CanvasRenderingContext2D.prototype.stroke');
  native(CanvasRenderingContext2D.prototype.drawFocusIfNeeded,'CanvasRenderingContext2D.prototype.drawFocusIfNeeded');
  native(CanvasRenderingContext2D.prototype.clip,'CanvasRenderingContext2D.prototype.clip');
  native(CanvasRenderingContext2D.prototype.isPointInPath,'CanvasRenderingContext2D.prototype.isPointInPath');
  native(CanvasRenderingContext2D.prototype.isPointInStroke,'CanvasRenderingContext2D.prototype.isPointInStroke');
  native(CanvasRenderingContext2D.prototype.fillText,'CanvasRenderingContext2D.prototype.fillText');
  native(CanvasRenderingContext2D.prototype.strokeText,'CanvasRenderingContext2D.prototype.strokeText');
  native(CanvasRenderingContext2D.prototype.measureText,'CanvasRenderingContext2D.prototype.measureText');
  native(CanvasRenderingContext2D.prototype.drawImage,'CanvasRenderingContext2D.prototype.drawImage');
  native(CanvasRenderingContext2D.prototype.createImageData,'CanvasRenderingContext2D.prototype.createImageData');
  native(CanvasRenderingContext2D.prototype.getImageData,'CanvasRenderingContext2D.prototype.getImageData');
  native(CanvasRenderingContext2D.prototype.putImageData,'CanvasRenderingContext2D.prototype.putImageData');
  native(CanvasRenderingContext2D.prototype.getContextAttributes,'CanvasRenderingContext2D.prototype.getContextAttributes');
  native(CanvasRenderingContext2D.prototype.setLineDash,'CanvasRenderingContext2D.prototype.setLineDash');
  native(CanvasRenderingContext2D.prototype.getLineDash,'CanvasRenderingContext2D.prototype.getLineDash');
  native(CanvasRenderingContext2D.prototype.closePath,'CanvasRenderingContext2D.prototype.closePath');
  native(CanvasRenderingContext2D.prototype.moveTo,'CanvasRenderingContext2D.prototype.moveTo');
  native(CanvasRenderingContext2D.prototype.lineTo,'CanvasRenderingContext2D.prototype.lineTo');
  native(CanvasRenderingContext2D.prototype.quadraticCurveTo,'CanvasRenderingContext2D.prototype.quadraticCurveTo');
  native(CanvasRenderingContext2D.prototype.bezierCurveTo,'CanvasRenderingContext2D.prototype.bezierCurveTo');
  native(CanvasRenderingContext2D.prototype.arcTo,'CanvasRenderingContext2D.prototype.arcTo');
  native(CanvasRenderingContext2D.prototype.rect,'CanvasRenderingContext2D.prototype.rect');
  native(CanvasRenderingContext2D.prototype.arc,'CanvasRenderingContext2D.prototype.arc');
  native(CanvasRenderingContext2D.prototype.ellipse,'CanvasRenderingContext2D.prototype.ellipse');
  native(CanvasGradient.prototype.addColorStop,'CanvasGradient.prototype.addColorStop');
  native(CSSSupportsRule.prototype.insertRule,'CSSSupportsRule.prototype.insertRule');
  native(CSSSupportsRule.prototype.deleteRule,'CSSSupportsRule.prototype.deleteRule');
  native(CSSStyleSheet.prototype.insertRule,'CSSStyleSheet.prototype.insertRule');
  native(CSSStyleSheet.prototype.deleteRule,'CSSStyleSheet.prototype.deleteRule');
  native(CSSStyleSheet.prototype.addRule,'CSSStyleSheet.prototype.addRule');
  native(CSSStyleSheet.prototype.removeRule,'CSSStyleSheet.prototype.removeRule');
  native(CSSStyleDeclaration.prototype.getPropertyValue,'CSSStyleDeclaration.prototype.getPropertyValue');
  native(CSSStyleDeclaration.prototype.removeProperty,'CSSStyleDeclaration.prototype.removeProperty');
  native(CSSStyleDeclaration.prototype.getPropertyPriority,'CSSStyleDeclaration.prototype.getPropertyPriority');
  native(CSSStyleDeclaration.prototype.setProperty,'CSSStyleDeclaration.prototype.setProperty');
  native(CSSStyleDeclaration.prototype.item,'CSSStyleDeclaration.prototype.item');
  native(CSSRuleList.prototype.item,'CSSRuleList.prototype.item');
  native(CSSMediaRule.prototype.insertRule,'CSSMediaRule.prototype.insertRule');
  native(CSSMediaRule.prototype.deleteRule,'CSSMediaRule.prototype.deleteRule');
  native(CSSKeyframesRule.prototype.insertRule,'CSSKeyframesRule.prototype.insertRule');
  native(CSSKeyframesRule.prototype.appendRule,'CSSKeyframesRule.prototype.appendRule');
  native(CSSKeyframesRule.prototype.deleteRule,'CSSKeyframesRule.prototype.deleteRule');
  native(CSSKeyframesRule.prototype.findRule,'CSSKeyframesRule.prototype.findRule');
  native(Blob.prototype.slice,'Blob.prototype.slice');
  native(ApplicationCache.prototype.update,'ApplicationCache.prototype.update');
  native(ApplicationCache.prototype.swapCache,'ApplicationCache.prototype.swapCache');
  native(ApplicationCache.prototype.abort,'ApplicationCache.prototype.abort');
  native(Intl.Collator.prototype.resolvedOptions,'Intl.Collator.prototype.resolvedOptions');
  native(Intl.NumberFormat.prototype.resolvedOptions,'Intl.NumberFormat.prototype.resolvedOptions');
  native(Intl.DateTimeFormat.prototype.resolvedOptions,'Intl.DateTimeFormat.prototype.resolvedOptions');
  native(Intl.v8BreakIterator.prototype.resolvedOptions,'Intl.v8BreakIterator.prototype.resolvedOptions');
  native(Object.getOwnPropertyDescriptor(Object.prototype,'__proto__').get,'Object.prototype.__proto__ (get)');
  native(Object.getOwnPropertyDescriptor(Object.prototype,'__proto__').set,'Object.prototype.__proto__ (set)');
  native(console.__proto__.constructor,'console.__proto__.constructor');
  native(console.__proto__.__proto__.constructor,'console.__proto__.__proto__.constructor');
  native(console.__proto__.__proto__.clear,'console.__proto__.__proto__.clear');
  native(console.__proto__.__proto__.groupEnd,'console.__proto__.__proto__.groupEnd');
  native(console.__proto__.__proto__.groupCollapsed,'console.__proto__.__proto__.groupCollapsed');
  native(console.__proto__.__proto__.group,'console.__proto__.__proto__.group');
  native(console.__proto__.__proto__.timelineEnd,'console.__proto__.__proto__.timelineEnd');
  native(console.__proto__.__proto__.timeline,'console.__proto__.__proto__.timeline');
  native(console.__proto__.__proto__.timeStamp,'console.__proto__.__proto__.timeStamp');
  native(console.__proto__.__proto__.timeEnd,'console.__proto__.__proto__.timeEnd');
  native(console.__proto__.__proto__.time,'console.__proto__.__proto__.time');
  native(console.__proto__.__proto__.profileEnd,'console.__proto__.__proto__.profileEnd');
  native(console.__proto__.__proto__.profile,'console.__proto__.__proto__.profile');
  native(console.__proto__.__proto__.markTimeline,'console.__proto__.__proto__.markTimeline');
  native(console.__proto__.__proto__.count,'console.__proto__.__proto__.count');
  native(console.__proto__.__proto__.assert,'console.__proto__.__proto__.assert');
  native(console.__proto__.__proto__.trace,'console.__proto__.__proto__.trace');
  native(console.__proto__.__proto__.table,'console.__proto__.__proto__.table');
  native(console.__proto__.__proto__.dirxml,'console.__proto__.__proto__.dirxml');
  native(console.__proto__.__proto__.dir,'console.__proto__.__proto__.dir');
  native(console.__proto__.__proto__.warn,'console.__proto__.__proto__.warn');
  native(console.__proto__.__proto__.log,'console.__proto__.__proto__.log');
  native(console.__proto__.__proto__.info,'console.__proto__.__proto__.info');
  native(console.__proto__.__proto__.error,'console.__proto__.__proto__.error');
  native(console.__proto__.__proto__.debug,'console.__proto__.__proto__.debug');
  native(console.__proto__.__proto__.constructor,'console.__proto__.__proto__.constructor');
  native(console.memory.__proto__.constructor,'console.memory.__proto__.constructor');
  native(XMLHttpRequest.__proto__,'XMLHttpRequest.__proto__');
//  native(Object.getOwnPropertyDescriptor(encodeURIComponent,'arguments').get,'encodeURIComponent.arguments (get)');
//  native(Object.getOwnPropertyDescriptor(ReferenceError.prototype,'stack').get,'ReferenceError.prototype.stack (get)');
//  native(Object.getOwnPropertyDescriptor(ReferenceError.prototype,'stack').set,'ReferenceError.prototype.stack (set)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'$9').get,'RegExp.$9 (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'$8').get,'RegExp.$8 (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'$7').get,'RegExp.$7 (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'$6').get,'RegExp.$6 (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'$5').get,'RegExp.$5 (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'$4').get,'RegExp.$4 (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'$3').get,'RegExp.$3 (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'$2').get,'RegExp.$2 (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'$1').get,'RegExp.$1 (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'rightContext').get,'RegExp.rightContext (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'leftContext').get,'RegExp.leftContext (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'lastParen').get,'RegExp.lastParen (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'lastMatch').set,'RegExp.lastMatch (set)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'lastMatch').get,'RegExp.lastMatch (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'multiline').get,'RegExp.multiline (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'multiline').set,'RegExp.multiline (set)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'input').get,'RegExp.input (get)');
//  native(Object.getOwnPropertyDescriptor(RegExp,'input').set,'RegExp.input (set)');
  native(document.fonts.__proto__.constructor,'document.fonts.__proto__.constructor');
  native(document.fonts.__proto__.has,'document.fonts.__proto__.has');
  native(document.fonts.__proto__.forEach,'document.fonts.__proto__.forEach');
  native(document.fonts.__proto__.delete,'document.fonts.__proto__.delete');
  native(document.fonts.__proto__.clear,'document.fonts.__proto__.clear');
  native(document.fonts.__proto__.add,'document.fonts.__proto__.add');
  native(document.fonts.__proto__.load,'document.fonts.__proto__.load');
  native(document.fonts.__proto__.check,'document.fonts.__proto__.check');
  native(EventTarget.prototype.addEventListener, 'EventTarget.prototype.addEventListener');
  native(EventTarget.prototype.removeEventListener, 'EventTarget.prototype.removeEventListener');
}; 
